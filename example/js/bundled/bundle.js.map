{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/dist/js/app/preBabel/common/dcf-dialog.js","assets/dist/js/app/preBabel/common/dcf-lazyLoad.js","assets/dist/js/app/preBabel/common/dcf-notice.js","assets/dist/js/app/preBabel/common/dcf-uuidGen.js","assets/dist/js/vendor/flatpickr/flatpickr.css","assets/dist/js/vendor/flatpickr/flatpickr.js","example/js/src/main-body.js","node_modules/browserify-css/browser.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfDialog = factory();\n  }\n}(this, function() {\nfunction Dialog(dialogPolyfill) {\n  // select all modal and convert node list to array\n  const modalContainers = [].slice.call(document.querySelectorAll('.dcf-js-dialog'));\n\n  modalContainers.forEach((modalContainer) => {\n    const trigger = modalContainer.querySelector('.dcf-js-dialog-trigger');\n    const modalDialog = modalContainer.querySelector('dialog');\n    const closeButton = modalContainer.querySelector('.dcf-o-dialog__close');\n\n    // if global dialog property not present, register all dialog modal with polyfill\n    if (!window.HTMLDialogElement) {\n      dialogPolyfill.registerDialog(modalDialog);\n    }\n\n    // show dialog on trigger button click\n    trigger.addEventListener('click', () => {\n      modalDialog.showModal();\n      // translate doesn't seem to work on dialog\n      modalDialog.style.top = `calc(50% - ${modalDialog.scrollHeight / 2}px)`;\n    });\n\n    // close dialog on close button click\n    closeButton.addEventListener('click', () => {\n      modalDialog.close('closed');\n    });\n\n    // close dialog on Esc button press\n    modalDialog.addEventListener('cancel', () => {\n      modalDialog.close('cancelled');\n    });\n\n    // close dialog when clicking on dialog backdrop\n    // for this to work properly, child elements of dialog must span the entire region\n    // within the dialog box so that when clicking within the dialog, child elements\n    // are clicked on instead of the dialog box itself\n    modalContainer.addEventListener('click', (e) => {\n      if (e.target == modalDialog) {\n        modalDialog.close('cancelled');\n      }\n    });\n  });\n\n  return dialogPolyfill;\n}\n\nreturn Dialog;\n}));\n",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfLazyLoad = factory();\n  }\n}(this, function() {\nclass LazyLoad {\n\t/**\n\t * class constructor\n\t * @param {imagesList} nodelist of selected images\n\t * @param {observerConfig} object of intersectionObserver configuration\n\t * @param {classNames} array of classes applied\n\t */\n\tconstructor(imagesList, observerConfig, classNames) {\n\t\tthis.imagesList = imagesList;\n\t\tthis.observerConfig = observerConfig;\n\t\tthis.classNames = classNames; // add onEnter, onEnterActive?\n\t}\n\n  pxTOvw(value) {\n    var w = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      x = w.innerWidth || e.clientWidth || g.clientWidth;\n\n    var result = (100*value)/x;\n    return result + 'vw';\n  };\n\n\t/**\n\t * Apply the image: preloaded image is loaded but not applied to actual image element\n\t * @param {string} image: the image element that we are targetting\n\t */\n\tapplyImage(image) {\n\t\tconst src = image.dataset.src;\n\t\tconst srcset = image.dataset.srcset || null;\n\t\tconst sizes = image.dataset.sizes || this.pxTOvw(image.parentElement.clientWidth);\n\n\t\tif (!src) {\n\t\t\treturn;\n\t\t\t//throw new Error('No image src attribute provided');\n\t\t}\n\n\t\t// Prevent this from being lazy loaded a second time.\n\t\timage.classList.add('dcf-lazy-img-loaded');\n\t\tsrc && (image.src = src);\n\t\tsrc && (image.removeAttribute('data-src'));\n\t\tsrcset && (image.srcset = srcset);\n\t\tsrcset && (image.removeAttribute('data-srcset'));\n\t\tsizes && (image.sizes = sizes);\n\t\tsizes && (image.removeAttribute('data-sizes'));\n\t\tthis.classNames.length && this.classNames.forEach(className => image.classList.add(className));\n\t};\n\t\n\t/**\n\t * Fetches the image for the given source\n\t * @param {string} src\n\t * @param {string} srcset, defaults to null if not provided\n\t */\n\tfetchImage(src, srcset = null, sizes = null) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst image = new Image();\n\t\t\tsrc && (image.src = src);\n\t\t\tsrcset && (image.srcset = srcset);\n\t\t\tsizes && (image.sizes = sizes);\n\n\t\t\timage.onload = resolve;\n\t\t\timage.onerror = reject;\n\t\t});\n\t}\n\n\t/**\n\t * Preloads the image\n\t * @param {object} image\n\t */\n\tpreloadImage(image) {\n\t\tconst src = image.dataset.src;\n\t\tconst srcset = image.dataset.srcset;\n\t\tconst sizes = image.dataset.sizes || null;\n\n\t\tif (!src) {\n\t\t\treturn;\n\t\t\t//throw new Error('No image src attribute provided');\n\t\t}\n\n\t\treturn this.fetchImage(src, srcset, sizes).catch(err => `Image failed to fetch ${err.mes}`);\n\t};\n\n\t/**\n\t * Load all of the images immediately\n\t * @param {NodeListOf<Element>} images\n\t */\n\tloadImagesImmediately(images) {\n\t\t// foreach() is not supported in IE\n\t\tfor (let i = 0; i < images.length; i++) {\n\t\t\tlet image = images[i];\n\t\t\tthis.preloadImage(image);\n\t\t\tthis.applyImage(image)\n\t\t}\n\t}\n\n\t/**\n\t * Disconnect the observer\n\t */\n\tdisconnect() {\n\t\tif (!this.observer) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.observer.disconnect();\n\t};\n\n\t/**\n\t * On intersection\n\t * @param {array} intersection entries\n\t * @param {object} intersection observer\n\t */\n\tonIntersection = (entries, observer) => {\n\n\t\t// Disconnect if we've already loaded all of the images\n\t\tif (this.imageCount === 0) {\n\t\t\tthis.observer.disconnect();\n\t\t}\n\n\t\t// Loop through the entries\n\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\tlet entry = entries[i];\n\n\t\t\t// Are we in viewport?\n\t\t\t// console.log(entry.intersectionRatio);\n\n\t\t\tif (entry.intersectionRatio > observer.thresholds[0] && entry.intersectionRatio < observer.thresholds[1]) {\n\t\t\t\tthis.preloadImage(entry.target);\n\t\t\t} else if (entry.intersectionRatio > observer.thresholds[1]) {\n\t\t\t\tthis.imageCount--;\n\t\t\t\tthis.applyImage(entry.target);\n\t\t\t\tthis.observer.unobserve(entry.target);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tinitialize() {\n\t\tif(!this.imagesList) return;\n\n\t\t// counter: keeps track of which images that hasn't been loaded\n\t\tthis.imageCount = this.imagesList.length;\n\n\t\t// If browser doesn't support intersection observer, load the images immediately\n\t\tif (!('IntersectionObserver' in window)) {\n\t\t\tthis.loadImagesImmediately(this.imagesList);\n\t\t} else {\n\t\t\t// It is supported, load the images\n\t\t\tthis.observer = new IntersectionObserver(this.onIntersection, this.observerConfig);\n\n\t\t\t// foreach() is not supported in IE\n\t\t\tfor (let i = 0; i < this.imageCount; i++) {\n\t\t\t\tlet image = this.imagesList[i];\n\t\t\t\tif (image.classList.contains('dcf-lazy-img-loaded')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis.observer.observe(image);\n\t\t\t}\n\t\t}\n\t}\n}\n\nreturn LazyLoad;\n}));\n",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['./dcf-uuidGen'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('./dcf-uuidGen'));\n  } else {\n    root.dcfWidgetNotice = factory(root.dcfHelperUuidv4);\n  }\n}(this, function(uuidv4) {\n// uuid-gen dependency defined in gruntfile UMD task and passed in as uuidv4\n//TODO change this to use Class instead\n\n\tlet Notice = {};\n\tlet notices = document.querySelectorAll('[data-widget=\"notice\"]');\n\tlet fixedBottomExists = document.querySelector('[id*=\"unl-widget-fixedBottom-\"]') ? true : false; // flag for checking if a fixedBottom notice has been previously added to the page set flag to true\n\n\tnotices = [].slice.call(notices);\n\n// standard classes based on what kind of notice, keep it to DCF classes for now\n\tconst noticeClasses = {\n\t\tnotify: ['dcf-notice', 'unl-notice-notify'],\n\t\tsuccess: ['dcf-notice', 'unl-notice-success'],\n\t\talert: ['dcf-notice', 'unl-notice--alert'],\n\t\tfatal: ['dcf-notice', 'unl-notice--fatal'],\n\t};\n\n\tconst noticeLocationClasses = {\n\t\tcurrent: ['uno'],\n\t\tnav: ['foo'],\n\t\tfixedBottom: ['bar', 'dcf-fixed', 'dcf-notice-fixedBottom', 'dcf-pin-bottom', 'dcf-pin-right', 'dcf-pin-left'],\n\t\tfixedBottomLeft: ['zoink'] // TODO add option that goes 50% width on desktop when fixedBottom\n\t};\n\n// default animations depending on associated locations\n// fixedBottom associated with slideUp animation. Everything else uses slideInScroll\n\tconst noticeAnimationClasses = {\n\t\tslideInScroll: ['baz'],\n\t\tslideUp: ['car'],\n\t};\n\n\tconst closeButtonClasses = ['dcf-absolute', 'dcf-pin-top', 'dcf-pin-right', 'dcf-mt-3', 'dcf-mr-3', 'dcf-btn', 'dcf-btn-tertiary', 'js-notice-toggle'];\n\n\n\t/**\n\t *\n\t * Functions\n\t */\n\n\t/**\n\t * @purpose - move element to be the first child of main\n\t * @param el - the element to be moved\n\t *\n\t */\n\tfunction prependMain(el) {\n\t\tconst main = document.querySelector('main');\n\t\tconst firstChild = main.firstElementChild;\n\t\tmain.insertBefore(el, firstChild);\n\t}\n\n\t/**\n\t * @purpose - permanently closes the notice element\n\t * @param notice - notice to be closed\n\t *\n\t */\n\tfunction closeNotice(notice) {\n\n\t\tfunction hideNotice(e) {\n\t\t\tif (e.propertyName !== \"max-height\") return;\n\t\t\tnotice.classList.add('dcf-d-none');\n\t\t\tnotice.removeEventListener('transitionend', hideNotice);\n\t\t\tdocument.querySelector('main').focus(); // sending focus back to main\n\t\t}\n\n\t\tnotice.addEventListener('transitionend', hideNotice);\n\t\tnotice.classList.add('dcf-notice-fixedBottom--close');\n\n\t\tlocalStorage.setItem(notice.id, 'closed');\n\t}\n\n\t/**\n\t * @purpose - collapse message when collapse button is selected\n\t * @param el - notice to be closed\n\t * @param closeButton - the close button associated with this notice\n\t * @param title - title of notice\n\t * @param message - message of notice\n\t *\n\t */\n\tfunction collapseExpandMessage(el, closeButton, title, message) {\n\t\t// Find out if notice is expanded\n\t\tlet expanded = closeButton.getAttribute('aria-expanded') === \"true\" ? true : false;\n\n\t\tif (expanded) {\n\t\t\t// if expanded, collapse message\n\t\t\tcloseButton.innerText = \"Expand\";\n\t\t\ttitle.classList.add('dcf-notice-title-collapse');\n\t\t\tmessage.classList.add('dcf-notice-message-collapse');\n\t\t\tif(el.id) localStorage.setItem(el.id, 'collapsed');\n\t\t} else {\n\t\t\t// if collapse, expand message\n\t\t\tcloseButton.innerText = \"Collapse\";\n\t\t\tmessage.classList.remove('dcf-notice-message-collapse');\n\t\t\ttitle.classList.remove('dcf-notice-title-collapse');\n\t\t\tif(el.id) localStorage.setItem(el.id, 'expanded');\n\t\t}\n\n\t\t// Invert to get new state\n\t\texpanded = new Boolean(!expanded);\n\n\t\t//Apply new state to notice\n\t\tcloseButton.setAttribute('aria-expanded', expanded.toString());\n\t}\n\n\n\t/**\n\t * @purpose add a close button to the widget and the associated click events\n\t * @param el\n\t * @param isCollapsible\n\t *\n\t */\n\tfunction addCloseButton(el, isCollapsible) {\n\t\tconst closeButton = document.createElement('button');\n\t\tcloseButtonClasses.forEach(closeButtonclass => closeButton.classList.add(closeButtonclass));\n\n\t\tif (isCollapsible) {\n\t\t\t// if notice can be collapsed\n\t\t\tconst noticeTitle = el.querySelector('.js-notice-title');\n\t\t\tconst noticeMessage = el.querySelector('.js-notice-message');\n\t\t\tconst noticeMessageId = noticeMessage.id || uuidv4();\n\n\t\t\tcloseButton.innerText = 'collapse';\n\t\t\tcloseButton.setAttribute('aria-expanded', 'true');\n\n\t\t\tif (!noticeTitle) {\n\t\t\t\tconsole.error('Your notice is missing a title.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!noticeMessage) {\n\t\t\t\tconsole.error('Your notice is missing a message.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnoticeTitle.classList.add('dcf-notice-title');\n\n\t\t\t!noticeMessage.id && (noticeMessage.id = noticeMessageId); //if no id is provided use the generated id\n\t\t\tcloseButton.setAttribute('aria-controls', noticeMessageId);\n\t\t\tnoticeMessage.classList.add('dcf-notice-message');\n\n\t\t\tcloseButton.addEventListener('click', () => {\n\t\t\t\tcollapseExpandMessage(el, closeButton, noticeTitle, noticeMessage);\n\t\t\t});\n\n\t\t} else {\n\t\t\t// else close the notice out completely\n\t\t\tcloseButton.innerText = 'close';\n\t\t\tcloseButton.addEventListener('click', () => {\n\t\t\t\tcloseNotice(el);\n\t\t\t});\n\t\t}\n\n\t\tel.insertBefore(closeButton, el.firstElementChild);\n\t}\n\n\n\t/**\n\t * Intersection Observer related code\n\t */\n\n// intersection observer - one time drawing variables and functions\n\tlet isDrawn = false;\n\tlet isMobile = false;\n\tlet mobileObserver, desktopObserver;\n\tconst mq = window.matchMedia(\"(min-width: 480px)\");\n\tconst mobileConfig = {\n\t\t/* on mobile given potential line breaks, we won't be able to view the entire notice in its\n\t\t entirety at one go so might want to show the notice when close to half of it is shown */\n\t\troot: null,\n\t\trootMargin: '0px',\n\t\tthreshold: 0.65\n\t};\n\tconst desktopConfig = {\n\t\troot: null,\n\t\trootMargin: '0px',\n\t\tthreshold: 0.8\n\t};\n\n\tfunction observerCallback(entries, observer) {\n\t\tentries.forEach(entry => {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tif (entry.intersectionRatio > 0 && entry.intersectionRatio >= observer.thresholds[0]) {\n\t\t\t\t\tnoticeAnimationClasses.slideInScroll.forEach(noticeAnimationClass => entry.target.classList.add(noticeAnimationClass));\n\n\t\t\t\t\t// set isDrawn flag to true after actions have been taken\n\t\t\t\t\tisDrawn = true;\n\t\t\t\t\tobserver.disconnect();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction onWidthChange(mq) {\n\t\tif (isDrawn) return;\n\t\tif (mq.matches) {\n\t\t\t//desktop\n\t\t\tisMobile = false;\n\t\t\tcreateDesktopObserver();\n\n\t\t\tif (mobileObserver) {\n\t\t\t\tmobileObserver.disconnect();\n\t\t\t}\n\t\t} else {\n\t\t\t//mobile\n\t\t\tisMobile = true;\n\t\t\tcreateMobileObserver();\n\n\t\t\tif (desktopObserver) {\n\t\t\t\tdesktopObserver.disconnect();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction createMobileObserver() {\n\t\tnotices.forEach(notice => {\n\t\t\tmobileObserver = new IntersectionObserver(observerCallback, mobileConfig);\n\t\t\tmobileObserver.observe(notice);\n\t\t});\n\t}\n\n\tfunction createDesktopObserver() {\n\t\tnotices.forEach(notice => {\n\t\t\tdesktopObserver = new IntersectionObserver(observerCallback, desktopConfig);\n\t\t\tdesktopObserver.observe(notice);\n\t\t});\n\t}\n\n\n\t/**\n\t * @purpose reusable notice creation and styling code\n\t * @param notice - the notice element\n\t */\n\tfunction createNotice(notice) {\n\t\tif (notice.initialized) return; // exit if the notice has been initialized\n\n\t\tconst noticeType = notice.dataset.noticeType;\n\t\tconst noticeLocation = notice.dataset.location;\n\t\tconst noticeAnimation = notice.dataset.animation === \"true\" ? true : false;\n\t\tconst noticeCollapsible = notice.dataset.collapsible === \"true\" ? true : false;\n\n\t\t// 1.check notice option type and add the needed classes\n\t\tif (noticeClasses[noticeType]) {\n\t\t\tnoticeClasses[noticeType].forEach(noticeClass => notice.classList.add(noticeClass))\n\t\t} else {\n\t\t\t// default to info notify styling\n\t\t\tnoticeClasses.notify.forEach(noticeClass => notice.classList.add(noticeClass))\n\t\t}\n\n\t\t// 2.check widget location whether its current, nav, or fixed-bottom and assign class names\n\t\tif (noticeLocation === 'fixedBottom') {\n\t\t\tif (!fixedBottomExists) {\n\t\t\t\t// get provided id and append it with a prefix\n\t\t\t\tif (notice.id) {\n\t\t\t\t\tnotice.id = `dcf-widget-fixedBottom--${notice.id}`;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.info(\n\t\t\t\t\t\t\t'An id attribute needs to be provided for the fixed to bottom notice to function properly with' +\n\t\t\t\t\t\t\t' localStorage');\n\t\t\t\t}\n\n\t\t\t\t// check to see if data-collapsible is false and exists in storage as closed, hide notice rightaway\n\t\t\t\tif (!noticeCollapsible && localStorage.getItem(notice.id) === 'closed') {\n\t\t\t\t\tnotice.classList.add('dcf-d-none');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// add assigned classes\n\t\t\t\tif (noticeLocationClasses[noticeLocation]) {\n\t\t\t\t\tnoticeLocationClasses[noticeLocation].forEach(noticeLocationClass => notice.classList.add(noticeLocationClass));\n\t\t\t\t}\n\n\t\t\t\taddCloseButton(notice, noticeCollapsible);\n\t\t\t\tprependMain(notice); // move fixed-bottom notice to the top of source\n\t\t\t\tfixedBottomExists = true;\n\t\t\t} else {\n\t\t\t\tconsole.error('Only one fixed to bottom notice may exist on a page');\n\t\t\t}\n\n\t\t} else {\n\t\t\t// location other than fixedBottom\n\n\t\t\tif (noticeLocationClasses[noticeLocation]) {\n\t\t\t\tnoticeLocationClasses[noticeLocation].forEach(noticeLocationClass => notice.classList.add(noticeLocationClass));\n\t\t\t} else {\n\t\t\t\t// set current option as the default notice styling\n\t\t\t\tnoticeLocationClasses.current.forEach(noticeLocationClass => notice.classList.add(noticeLocationClass));\n\t\t\t}\n\n\t\t\t// 2.1 if its nav, move the element to after the nav and before the page title\n\t\t\tif (noticeLocation === 'nav') {\n\t\t\t\tprependMain(notice);\n\t\t\t}\n\t\t}\n\n\t\t// 3. check animation type whether its slide-in-scroll?\n\t\t// if exist will have to implement intersection observer\n\t\t// Question for Michael if multiple widgets need intersection observer, how can we make it more modular?\n\t\tif (noticeAnimation) {\n\t\t\tif (noticeLocation === 'fixedBottom') {\n\t\t\t\t// add noticeAnimationClasses.slideUp\n\t\t\t\tnoticeAnimationClasses.slideUp.forEach(noticeAnimationClass => notice.classList.add(noticeAnimationClass))\n\t\t\t} else {\n\t\t\t\t// implement intersection observer\n\t\t\t\t// add noticeAnimationClasses.slideInScroll\n\t\t\t\tif ('IntersectionObserver' in window) {\n\t\t\t\t\tnotice.classList.add('hide-animate');\n\t\t\t\t\tmq.addListener(() => onWidthChange(mq));\n\n\t\t\t\t\t//check browser width once on page load\n\t\t\t\t\tonWidthChange(mq);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnotice.initialized = true;\n\n\t\t// 4. check localStorage for fixed bottom and collapsible\n\t\tif (noticeCollapsible && localStorage.getItem(notice.id) === 'collapsed') {\n\t\t\tconst noticeTitle = notice.querySelector('.js-notice-title');\n\t\t\tconst noticeMessage = notice.querySelector('.js-notice-message');\n\t\t\tconst toggleButton = notice.querySelector('.js-notice-toggle');\n\n\t\t\tif (!noticeTitle) {\n\t\t\t\tconsole.error('Your notice is missing a title.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!noticeMessage) {\n\t\t\t\tconsole.error('Your notice is missing a message.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcollapseExpandMessage(notice, toggleButton, noticeTitle, noticeMessage);\n\t\t}\n\t}\n\n\t/**\n\t *  widget.initialize is the default functionality that scans all the existing notice widgets in the dom\n\t *  and initialize them\n\t */\n\tNotice.initialize = () => {\n\t\tnotices.forEach(notice => {\n\t\t\t\t\tcreateNotice(notice);\n\t\t\t\t}\n\t\t)\n\t};\n\n\t/**\n\t * widget.create takes in arguments to dynamically create notices on the fly\n\t */\n\tNotice.create = (noticeTitle = \"\", noticeMessage = \"\", widgetOptions, insertionReference = 'main', insertionPoint) => {\n\n\t\tif (noticeTitle.length === 0) {\n\t\t\tconsole.error('Please provide a notice title');\n\t\t\treturn;\n\t\t}\n\n\t\tif (noticeMessage.length === 0) {\n\t\t\tconsole.error('Please provide a notice message');\n\t\t\treturn;\n\t\t}\n\n\t\tconst notice = document.createElement('div');\n\t\tconst noticeHeader = document.createElement('h2');\n\t\tconst noticeContent = document.createElement('p');\n\n\t\t// set up the notice element\n\t\tconst keys = Object.keys(widgetOptions);\n\t\tnotice.setAttribute('role', 'alert');\n\n\t\tkeys.forEach(key => {\n\t\t\tif (key === 'id') {\n\t\t\t\tnotice.id = widgetOptions[key];\n\t\t\t} else {\n\t\t\t\tnotice.setAttribute(`data-${key}`, widgetOptions[key]);\n\t\t\t}\n\t\t});\n\n\t\tif (typeof(noticeTitle) === 'string') noticeHeader.innerText = noticeTitle;\n\t\tif (typeof(noticeMessage) === 'string') noticeContent.innerText = noticeMessage;\n\n\t\tnoticeHeader.classList.add('js-notice-title');\n\t\tnoticeContent.classList.add('js-notice-message');\n\n\t\tnotice.appendChild(noticeHeader);\n\t\tnotice.appendChild(noticeContent);\n\n\t\t// insert the notice\n\t\tif (insertionReference === 'main' && insertionPoint === undefined) {\n\t\t\t// assuming no insertionReference or insertionPoint provided\n\t\t\tprependMain(notice)\n\t\t} else {\n\t\t\t// if insertionReference provided without insertigonPoint provided, default will be afterbegin\n\t\t\tif (insertionPoint === undefined) insertionPoint = 'afterbegin';\n\t\t\tconst targetElement = document.querySelector(insertionReference);\n\t\t\ttargetElement.insertAdjacentElement(insertionPoint, notice);\n\t\t}\n\n\t\t// call createNotice\n\t\tcreateNotice(notice);\n\t};\n\nreturn Notice;\n}));\n",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfHelperUuidv4 = factory();\n  }\n}(this, function() {\nfunction uuidv4() {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t\tvar r = Math.random() * 16 | 0,\n\t\t\t\tv = c === 'x' ? r : r & 0x3 | 0x8;\n\t\treturn v.toString(16);\n\t});\n}\n\nreturn uuidv4;\n}));\n","var css = \".flatpickr-calendar{background:0 0;opacity:0;display:none;text-align:center;visibility:hidden;padding:0;-webkit-animation:none;animation:none;direction:ltr;border:0;font-size:14px;line-height:24px;border-radius:5px;position:absolute;width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-touch-action:manipulation;touch-action:manipulation;background:#fff;-webkit-box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,.08);box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,.08)}.flatpickr-calendar.inline,.flatpickr-calendar.open{opacity:1;max-height:640px;visibility:visible}.flatpickr-calendar.open{display:inline-block;z-index:99999}.flatpickr-calendar.animate.open{-webkit-animation:fpFadeInDown .3s cubic-bezier(.23,1,.32,1);animation:fpFadeInDown .3s cubic-bezier(.23,1,.32,1)}.flatpickr-calendar.inline{display:block;position:relative;top:2px}.flatpickr-calendar.static{position:absolute;top:calc(100% + 2px)}.flatpickr-calendar.static.open{z-index:999;display:block}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7){-webkit-box-shadow:none!important;box-shadow:none!important}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1){-webkit-box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-calendar .hasTime .dayContainer,.flatpickr-calendar .hasWeeks .dayContainer{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.flatpickr-calendar .hasWeeks .dayContainer{border-left:0}.flatpickr-calendar.showTimeInput.hasTime .flatpickr-time{height:40px;border-top:1px solid #e6e6e6}.flatpickr-calendar.noCalendar.hasTime .flatpickr-time{height:auto}.flatpickr-calendar:after,.flatpickr-calendar:before{position:absolute;display:block;pointer-events:none;border:solid transparent;content:'';height:0;width:0;left:22px}.flatpickr-calendar.rightMost:after,.flatpickr-calendar.rightMost:before{left:auto;right:22px}.flatpickr-calendar:before{border-width:5px;margin:0 -5px}.flatpickr-calendar:after{border-width:4px;margin:0 -4px}.flatpickr-calendar.arrowTop:after,.flatpickr-calendar.arrowTop:before{bottom:100%}.flatpickr-calendar.arrowTop:before{border-bottom-color:#e6e6e6}.flatpickr-calendar.arrowTop:after{border-bottom-color:#fff}.flatpickr-calendar.arrowBottom:after,.flatpickr-calendar.arrowBottom:before{top:100%}.flatpickr-calendar.arrowBottom:before{border-top-color:#e6e6e6}.flatpickr-calendar.arrowBottom:after{border-top-color:#fff}.flatpickr-calendar:focus{outline:0}.flatpickr-wrapper{position:relative;display:inline-block}.flatpickr-months{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-months .flatpickr-month{background:0 0;color:rgba(0,0,0,.9);fill:rgba(0,0,0,.9);height:28px;line-height:1;text-align:center;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.flatpickr-months .flatpickr-next-month,.flatpickr-months .flatpickr-prev-month{text-decoration:none;cursor:pointer;position:absolute;top:0;line-height:16px;height:28px;padding:10px;z-index:3;color:rgba(0,0,0,.9);fill:rgba(0,0,0,.9)}.flatpickr-months .flatpickr-next-month.disabled,.flatpickr-months .flatpickr-prev-month.disabled{display:none}.flatpickr-months .flatpickr-next-month i,.flatpickr-months .flatpickr-prev-month i{position:relative}.flatpickr-months .flatpickr-next-month.flatpickr-prev-month,.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month{left:0}.flatpickr-months .flatpickr-next-month.flatpickr-next-month,.flatpickr-months .flatpickr-prev-month.flatpickr-next-month{right:0}.flatpickr-months .flatpickr-next-month:hover,.flatpickr-months .flatpickr-prev-month:hover{color:#959ea9}.flatpickr-months .flatpickr-next-month:hover svg,.flatpickr-months .flatpickr-prev-month:hover svg{fill:#f64747}.flatpickr-months .flatpickr-next-month svg,.flatpickr-months .flatpickr-prev-month svg{width:14px;height:14px}.flatpickr-months .flatpickr-next-month svg path,.flatpickr-months .flatpickr-prev-month svg path{-webkit-transition:fill .1s;transition:fill .1s;fill:inherit}.numInputWrapper{position:relative;height:auto}.numInputWrapper input,.numInputWrapper span{display:inline-block}.numInputWrapper input{width:100%}.numInputWrapper input::-ms-clear{display:none}.numInputWrapper span{position:absolute;right:0;width:14px;padding:0 4px 0 2px;height:50%;line-height:50%;opacity:0;cursor:pointer;border:1px solid rgba(57,57,57,.15);-webkit-box-sizing:border-box;box-sizing:border-box}.numInputWrapper span:hover{background:rgba(0,0,0,.1)}.numInputWrapper span:active{background:rgba(0,0,0,.2)}.numInputWrapper span:after{display:block;content:\\\"\\\";position:absolute}.numInputWrapper span.arrowUp{top:0;border-bottom:0}.numInputWrapper span.arrowUp:after{border-left:4px solid transparent;border-right:4px solid transparent;border-bottom:4px solid rgba(57,57,57,.6);top:26%}.numInputWrapper span.arrowDown{top:50%}.numInputWrapper span.arrowDown:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid rgba(57,57,57,.6);top:40%}.numInputWrapper span svg{width:inherit;height:auto}.numInputWrapper span svg path{fill:rgba(0,0,0,.5)}.numInputWrapper:hover{background:rgba(0,0,0,.05)}.numInputWrapper:hover span{opacity:1}.flatpickr-current-month{font-size:135%;line-height:inherit;font-weight:300;color:inherit;position:absolute;width:75%;left:12.5%;padding:6.16px 0 0 0;line-height:1;height:28px;display:inline-block;text-align:center;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.flatpickr-current-month span.cur-month{font-family:inherit;font-weight:700;color:inherit;display:inline-block;margin-left:.5ch;padding:0}.flatpickr-current-month span.cur-month:hover{background:rgba(0,0,0,.05)}.flatpickr-current-month .numInputWrapper{width:6ch;display:inline-block}.flatpickr-current-month .numInputWrapper span.arrowUp:after{border-bottom-color:rgba(0,0,0,.9)}.flatpickr-current-month .numInputWrapper span.arrowDown:after{border-top-color:rgba(0,0,0,.9)}.flatpickr-current-month input.cur-year{background:0 0;-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;cursor:text;padding:0 0 0 .5ch;margin:0;display:inline-block;font-size:inherit;font-family:inherit;font-weight:300;line-height:inherit;height:auto;border:0;border-radius:0;vertical-align:initial}.flatpickr-current-month input.cur-year:focus{outline:0}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{font-size:100%;color:rgba(0,0,0,.5);background:0 0;pointer-events:none}.flatpickr-weekdays{background:0 0;text-align:center;overflow:hidden;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;height:28px}.flatpickr-weekdays .flatpickr-weekdaycontainer{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}span.flatpickr-weekday{cursor:default;font-size:90%;background:0 0;color:rgba(0,0,0,.54);line-height:1;margin:0;text-align:center;display:block;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;font-weight:bolder}.dayContainer,.flatpickr-weeks{padding:1px 0 0 0}.flatpickr-days{position:relative;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;width:307.875px}.flatpickr-days:focus{outline:0}.dayContainer{padding:0;outline:0;text-align:left;width:307.875px;min-width:307.875px;max-width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-wrap:wrap;-ms-flex-pack:justify;-webkit-justify-content:space-around;justify-content:space-around;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);opacity:1}.dayContainer+.dayContainer{-webkit-box-shadow:-1px 0 0 #e6e6e6;box-shadow:-1px 0 0 #e6e6e6}.flatpickr-day{background:0 0;border:1px solid transparent;border-radius:150px;-webkit-box-sizing:border-box;box-sizing:border-box;color:#393939;cursor:pointer;font-weight:400;width:14.2857143%;-webkit-flex-basis:14.2857143%;-ms-flex-preferred-size:14.2857143%;flex-basis:14.2857143%;max-width:39px;height:39px;line-height:39px;margin:0;display:inline-block;position:relative;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center}.flatpickr-day.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day.nextMonthDay:focus,.flatpickr-day.nextMonthDay:hover,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.today.inRange,.flatpickr-day:focus,.flatpickr-day:hover{cursor:pointer;outline:0;background:#e6e6e6;border-color:#e6e6e6}.flatpickr-day.today{border-color:#959ea9}.flatpickr-day.today:focus,.flatpickr-day.today:hover{border-color:#959ea9;background:#959ea9;color:#fff}.flatpickr-day.endRange,.flatpickr-day.endRange.inRange,.flatpickr-day.endRange.nextMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.endRange:focus,.flatpickr-day.endRange:hover,.flatpickr-day.selected,.flatpickr-day.selected.inRange,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.selected:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange,.flatpickr-day.startRange.inRange,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.startRange:focus,.flatpickr-day.startRange:hover{background:#569ff7;-webkit-box-shadow:none;box-shadow:none;color:#fff;border-color:#569ff7}.flatpickr-day.endRange.startRange,.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange{border-radius:50px 0 0 50px}.flatpickr-day.endRange.endRange,.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange{border-radius:0 50px 50px 0}.flatpickr-day.endRange.startRange+.endRange:not(:nth-child(7n+1)),.flatpickr-day.selected.startRange+.endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange+.endRange:not(:nth-child(7n+1)){-webkit-box-shadow:-10px 0 0 #569ff7;box-shadow:-10px 0 0 #569ff7}.flatpickr-day.endRange.startRange.endRange,.flatpickr-day.selected.startRange.endRange,.flatpickr-day.startRange.startRange.endRange{border-radius:50px}.flatpickr-day.inRange{border-radius:0;-webkit-box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-day.disabled,.flatpickr-day.disabled:hover,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.nextMonthDay,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.prevMonthDay{color:rgba(57,57,57,.3);background:0 0;border-color:transparent;cursor:default}.flatpickr-day.disabled,.flatpickr-day.disabled:hover{cursor:not-allowed;color:rgba(57,57,57,.1)}.flatpickr-day.week.selected{border-radius:0;-webkit-box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7;box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7}.flatpickr-day.hidden{visibility:hidden}.rangeMode .flatpickr-day{margin-top:1px}.flatpickr-weekwrapper{display:inline-block;float:left}.flatpickr-weekwrapper .flatpickr-weeks{padding:0 12px;-webkit-box-shadow:1px 0 0 #e6e6e6;box-shadow:1px 0 0 #e6e6e6}.flatpickr-weekwrapper .flatpickr-weekday{float:none;width:100%;line-height:28px}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{display:block;width:100%;max-width:none;color:rgba(57,57,57,.3);background:0 0;cursor:default;border:none}.flatpickr-innerContainer{display:block;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden}.flatpickr-rContainer{display:inline-block;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}.flatpickr-time{text-align:center;outline:0;display:block;height:0;line-height:40px;max-height:40px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-time:after{content:\\\"\\\";display:table;clear:both}.flatpickr-time .numInputWrapper{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;width:40%;height:40px;float:left}.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:#393939}.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:#393939}.flatpickr-time.hasSeconds .numInputWrapper{width:26%}.flatpickr-time.time24hr .numInputWrapper{width:49%}.flatpickr-time input{background:0 0;-webkit-box-shadow:none;box-shadow:none;border:0;border-radius:0;text-align:center;margin:0;padding:0;height:inherit;line-height:inherit;color:#393939;font-size:14px;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box}.flatpickr-time input.flatpickr-hour{font-weight:700}.flatpickr-time input.flatpickr-minute,.flatpickr-time input.flatpickr-second{font-weight:400}.flatpickr-time input:focus{outline:0;border:0}.flatpickr-time .flatpickr-am-pm,.flatpickr-time .flatpickr-time-separator{height:inherit;display:inline-block;float:left;line-height:inherit;color:#393939;font-weight:700;width:2%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center}.flatpickr-time .flatpickr-am-pm{outline:0;width:18%;cursor:pointer;text-align:center;font-weight:400}.flatpickr-time .flatpickr-am-pm:focus,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time input:hover{background:#f3f3f3}.flatpickr-input[readonly]{cursor:pointer}@-webkit-keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}\"; (require(\"browserify-css\").createStyle(css, { \"href\": \"assets/dist/js/vendor/flatpickr/flatpickr.css\" }, { \"insertAt\": \"bottom\" })); module.exports = css;","/* flatpickr v4.5.2, @license MIT */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.flatpickr = factory());\n}(this, (function () { 'use strict';\n\n    var pad = function pad(number) {\n      return (\"0\" + number).slice(-2);\n    };\n    var int = function int(bool) {\n      return bool === true ? 1 : 0;\n    };\n    function debounce(func, wait, immediate) {\n      if (immediate === void 0) {\n        immediate = false;\n      }\n\n      var timeout;\n      return function () {\n        var context = this,\n            args = arguments;\n        timeout !== null && clearTimeout(timeout);\n        timeout = window.setTimeout(function () {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        }, wait);\n        if (immediate && !timeout) func.apply(context, args);\n      };\n    }\n    var arrayify = function arrayify(obj) {\n      return obj instanceof Array ? obj : [obj];\n    };\n\n    var do_nothing = function do_nothing() {\n      return undefined;\n    };\n\n    var monthToStr = function monthToStr(monthNumber, shorthand, locale) {\n      return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n    };\n    var revFormat = {\n      D: do_nothing,\n      F: function F(dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n      },\n      G: function G(dateObj, hour) {\n        dateObj.setHours(parseFloat(hour));\n      },\n      H: function H(dateObj, hour) {\n        dateObj.setHours(parseFloat(hour));\n      },\n      J: function J(dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n      },\n      K: function K(dateObj, amPM, locale) {\n        dateObj.setHours(dateObj.getHours() % 12 + 12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n      },\n      M: function M(dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n      },\n      S: function S(dateObj, seconds) {\n        dateObj.setSeconds(parseFloat(seconds));\n      },\n      U: function U(_, unixSeconds) {\n        return new Date(parseFloat(unixSeconds) * 1000);\n      },\n      W: function W(dateObj, weekNum) {\n        var weekNumber = parseInt(weekNum);\n        return new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n      },\n      Y: function Y(dateObj, year) {\n        dateObj.setFullYear(parseFloat(year));\n      },\n      Z: function Z(_, ISODate) {\n        return new Date(ISODate);\n      },\n      d: function d(dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n      },\n      h: function h(dateObj, hour) {\n        dateObj.setHours(parseFloat(hour));\n      },\n      i: function i(dateObj, minutes) {\n        dateObj.setMinutes(parseFloat(minutes));\n      },\n      j: function j(dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n      },\n      l: do_nothing,\n      m: function m(dateObj, month) {\n        dateObj.setMonth(parseFloat(month) - 1);\n      },\n      n: function n(dateObj, month) {\n        dateObj.setMonth(parseFloat(month) - 1);\n      },\n      s: function s(dateObj, seconds) {\n        dateObj.setSeconds(parseFloat(seconds));\n      },\n      w: do_nothing,\n      y: function y(dateObj, year) {\n        dateObj.setFullYear(2000 + parseFloat(year));\n      }\n    };\n    var tokenRegex = {\n      D: \"(\\\\w+)\",\n      F: \"(\\\\w+)\",\n      G: \"(\\\\d\\\\d|\\\\d)\",\n      H: \"(\\\\d\\\\d|\\\\d)\",\n      J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n      K: \"\",\n      M: \"(\\\\w+)\",\n      S: \"(\\\\d\\\\d|\\\\d)\",\n      U: \"(.+)\",\n      W: \"(\\\\d\\\\d|\\\\d)\",\n      Y: \"(\\\\d{4})\",\n      Z: \"(.+)\",\n      d: \"(\\\\d\\\\d|\\\\d)\",\n      h: \"(\\\\d\\\\d|\\\\d)\",\n      i: \"(\\\\d\\\\d|\\\\d)\",\n      j: \"(\\\\d\\\\d|\\\\d)\",\n      l: \"(\\\\w+)\",\n      m: \"(\\\\d\\\\d|\\\\d)\",\n      n: \"(\\\\d\\\\d|\\\\d)\",\n      s: \"(\\\\d\\\\d|\\\\d)\",\n      w: \"(\\\\d\\\\d|\\\\d)\",\n      y: \"(\\\\d{2})\"\n    };\n    var formats = {\n      Z: function Z(date) {\n        return date.toISOString();\n      },\n      D: function D(date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n      },\n      F: function F(date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n      },\n      G: function G(date, locale, options) {\n        return pad(formats.h(date, locale, options));\n      },\n      H: function H(date) {\n        return pad(date.getHours());\n      },\n      J: function J(date, locale) {\n        return locale.ordinal !== undefined ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();\n      },\n      K: function K(date, locale) {\n        return locale.amPM[int(date.getHours() > 11)];\n      },\n      M: function M(date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n      },\n      S: function S(date) {\n        return pad(date.getSeconds());\n      },\n      U: function U(date) {\n        return date.getTime() / 1000;\n      },\n      W: function W(date, _, options) {\n        return options.getWeek(date);\n      },\n      Y: function Y(date) {\n        return date.getFullYear();\n      },\n      d: function d(date) {\n        return pad(date.getDate());\n      },\n      h: function h(date) {\n        return date.getHours() % 12 ? date.getHours() % 12 : 12;\n      },\n      i: function i(date) {\n        return pad(date.getMinutes());\n      },\n      j: function j(date) {\n        return date.getDate();\n      },\n      l: function l(date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n      },\n      m: function m(date) {\n        return pad(date.getMonth() + 1);\n      },\n      n: function n(date) {\n        return date.getMonth() + 1;\n      },\n      s: function s(date) {\n        return date.getSeconds();\n      },\n      w: function w(date) {\n        return date.getDay();\n      },\n      y: function y(date) {\n        return String(date.getFullYear()).substring(2);\n      }\n    };\n\n    var english = {\n      weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n      },\n      months: {\n        shorthand: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        longhand: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n      },\n      daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n      firstDayOfWeek: 0,\n      ordinal: function ordinal(nth) {\n        var s = nth % 100;\n        if (s > 3 && s < 21) return \"th\";\n\n        switch (s % 10) {\n          case 1:\n            return \"st\";\n\n          case 2:\n            return \"nd\";\n\n          case 3:\n            return \"rd\";\n\n          default:\n            return \"th\";\n        }\n      },\n      rangeSeparator: \" to \",\n      weekAbbreviation: \"Wk\",\n      scrollTitle: \"Scroll to increment\",\n      toggleTitle: \"Click to toggle\",\n      amPM: [\"AM\", \"PM\"],\n      yearAriaLabel: \"Year\"\n    };\n\n    var createDateFormatter = function createDateFormatter(_ref) {\n      var _ref$config = _ref.config,\n          config = _ref$config === void 0 ? defaults : _ref$config,\n          _ref$l10n = _ref.l10n,\n          l10n = _ref$l10n === void 0 ? english : _ref$l10n;\n      return function (dateObj, frmt, overrideLocale) {\n        var locale = overrideLocale || l10n;\n\n        if (config.formatDate !== undefined) {\n          return config.formatDate(dateObj, frmt, locale);\n        }\n\n        return frmt.split(\"\").map(function (c, i, arr) {\n          return formats[c] && arr[i - 1] !== \"\\\\\" ? formats[c](dateObj, locale, config) : c !== \"\\\\\" ? c : \"\";\n        }).join(\"\");\n      };\n    };\n    var createDateParser = function createDateParser(_ref2) {\n      var _ref2$config = _ref2.config,\n          config = _ref2$config === void 0 ? defaults : _ref2$config,\n          _ref2$l10n = _ref2.l10n,\n          l10n = _ref2$l10n === void 0 ? english : _ref2$l10n;\n      return function (date, givenFormat, timeless, customLocale) {\n        if (date !== 0 && !date) return undefined;\n        var locale = customLocale || l10n;\n        var parsedDate;\n        var date_orig = date;\n        if (date instanceof Date) parsedDate = new Date(date.getTime());else if (typeof date !== \"string\" && date.toFixed !== undefined) parsedDate = new Date(date);else if (typeof date === \"string\") {\n          var format = givenFormat || (config || defaults).dateFormat;\n          var datestr = String(date).trim();\n\n          if (datestr === \"today\") {\n            parsedDate = new Date();\n            timeless = true;\n          } else if (/Z$/.test(datestr) || /GMT$/.test(datestr)) parsedDate = new Date(date);else if (config && config.parseDate) parsedDate = config.parseDate(date, format);else {\n            parsedDate = !config || !config.noCalendar ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0) : new Date(new Date().setHours(0, 0, 0, 0));\n            var matched,\n                ops = [];\n\n            for (var i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n              var token = format[i];\n              var isBackSlash = token === \"\\\\\";\n              var escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n\n              if (tokenRegex[token] && !escaped) {\n                regexStr += tokenRegex[token];\n                var match = new RegExp(regexStr).exec(date);\n\n                if (match && (matched = true)) {\n                  ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                    fn: revFormat[token],\n                    val: match[++matchIndex]\n                  });\n                }\n              } else if (!isBackSlash) regexStr += \".\";\n\n              ops.forEach(function (_ref3) {\n                var fn = _ref3.fn,\n                    val = _ref3.val;\n                return parsedDate = fn(parsedDate, val, locale) || parsedDate;\n              });\n            }\n\n            parsedDate = matched ? parsedDate : undefined;\n          }\n        }\n\n        if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n          config.errorHandler(new Error(\"Invalid date provided: \" + date_orig));\n          return undefined;\n        }\n\n        if (timeless === true) parsedDate.setHours(0, 0, 0, 0);\n        return parsedDate;\n      };\n    };\n    function compareDates(date1, date2, timeless) {\n      if (timeless === void 0) {\n        timeless = true;\n      }\n\n      if (timeless !== false) {\n        return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);\n      }\n\n      return date1.getTime() - date2.getTime();\n    }\n    var getWeek = function getWeek(givenDate) {\n      var date = new Date(givenDate.getTime());\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\n      var week1 = new Date(date.getFullYear(), 0, 4);\n      return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\n    };\n    var isBetween = function isBetween(ts, ts1, ts2) {\n      return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n    };\n    var duration = {\n      DAY: 86400000\n    };\n\n    var HOOKS = [\"onChange\", \"onClose\", \"onDayCreate\", \"onDestroy\", \"onKeyDown\", \"onMonthChange\", \"onOpen\", \"onParseConfig\", \"onReady\", \"onValueUpdate\", \"onYearChange\", \"onPreCalendarPosition\"];\n    var defaults = {\n      _disable: [],\n      _enable: [],\n      allowInput: false,\n      altFormat: \"F j, Y\",\n      altInput: false,\n      altInputClass: \"form-control input\",\n      animate: typeof window === \"object\" && window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n      ariaDateFormat: \"F j, Y\",\n      clickOpens: true,\n      closeOnSelect: true,\n      conjunction: \", \",\n      dateFormat: \"Y-m-d\",\n      defaultHour: 12,\n      defaultMinute: 0,\n      defaultSeconds: 0,\n      disable: [],\n      disableMobile: false,\n      enable: [],\n      enableSeconds: false,\n      enableTime: false,\n      errorHandler: function errorHandler(err) {\n        return typeof console !== \"undefined\" && console.warn(err);\n      },\n      getWeek: getWeek,\n      hourIncrement: 1,\n      ignoredFocusElements: [],\n      inline: false,\n      locale: \"default\",\n      minuteIncrement: 5,\n      mode: \"single\",\n      nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n      noCalendar: false,\n      now: new Date(),\n      onChange: [],\n      onClose: [],\n      onDayCreate: [],\n      onDestroy: [],\n      onKeyDown: [],\n      onMonthChange: [],\n      onOpen: [],\n      onParseConfig: [],\n      onReady: [],\n      onValueUpdate: [],\n      onYearChange: [],\n      onPreCalendarPosition: [],\n      plugins: [],\n      position: \"auto\",\n      positionElement: undefined,\n      prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n      shorthandCurrentMonth: false,\n      showMonths: 1,\n      static: false,\n      time_24hr: false,\n      weekNumbers: false,\n      wrap: false\n    };\n\n    function toggleClass(elem, className, bool) {\n      if (bool === true) return elem.classList.add(className);\n      elem.classList.remove(className);\n    }\n    function createElement(tag, className, content) {\n      var e = window.document.createElement(tag);\n      className = className || \"\";\n      content = content || \"\";\n      e.className = className;\n      if (content !== undefined) e.textContent = content;\n      return e;\n    }\n    function clearNode(node) {\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n    }\n    function findParent(node, condition) {\n      if (condition(node)) return node;else if (node.parentNode) return findParent(node.parentNode, condition);\n      return undefined;\n    }\n    function createNumberInput(inputClassName, opts) {\n      var wrapper = createElement(\"div\", \"numInputWrapper\"),\n          numInput = createElement(\"input\", \"numInput \" + inputClassName),\n          arrowUp = createElement(\"span\", \"arrowUp\"),\n          arrowDown = createElement(\"span\", \"arrowDown\");\n      numInput.type = \"text\";\n      numInput.pattern = \"\\\\d*\";\n      if (opts !== undefined) for (var key in opts) {\n        numInput.setAttribute(key, opts[key]);\n      }\n      wrapper.appendChild(numInput);\n      wrapper.appendChild(arrowUp);\n      wrapper.appendChild(arrowDown);\n      return wrapper;\n    }\n\n    if (typeof Object.assign !== \"function\") {\n      Object.assign = function (target) {\n        if (!target) {\n          throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var _loop = function _loop() {\n          var source = args[_i];\n\n          if (source) {\n            Object.keys(source).forEach(function (key) {\n              return target[key] = source[key];\n            });\n          }\n        };\n\n        for (var _i = 0; _i < args.length; _i++) {\n          _loop();\n        }\n\n        return target;\n      };\n    }\n\n    var DEBOUNCED_CHANGE_MS = 300;\n\n    function FlatpickrInstance(element, instanceConfig) {\n      var self = {\n        config: Object.assign({}, flatpickr.defaultConfig),\n        l10n: english\n      };\n      self.parseDate = createDateParser({\n        config: self.config,\n        l10n: self.l10n\n      });\n      self._handlers = [];\n      self._bind = bind;\n      self._setHoursFromDate = setHoursFromDate;\n      self._positionCalendar = positionCalendar;\n      self.changeMonth = changeMonth;\n      self.changeYear = changeYear;\n      self.clear = clear;\n      self.close = close;\n      self._createElement = createElement;\n      self.destroy = destroy;\n      self.isEnabled = isEnabled;\n      self.jumpToDate = jumpToDate;\n      self.open = open;\n      self.redraw = redraw;\n      self.set = set;\n      self.setDate = setDate;\n      self.toggle = toggle;\n\n      function setupHelperFunctions() {\n        self.utils = {\n          getDaysInMonth: function getDaysInMonth(month, yr) {\n            if (month === void 0) {\n              month = self.currentMonth;\n            }\n\n            if (yr === void 0) {\n              yr = self.currentYear;\n            }\n\n            if (month === 1 && (yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0)) return 29;\n            return self.l10n.daysInMonth[month];\n          }\n        };\n      }\n\n      function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile) build();\n        bindEvents();\n\n        if (self.selectedDates.length || self.config.noCalendar) {\n          if (self.config.enableTime) {\n            setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj || self.config.minDate : undefined);\n          }\n\n          updateValue(false);\n        }\n\n        setCalendarWidth();\n        self.showTimeInput = self.selectedDates.length > 0 || self.config.noCalendar;\n        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n        if (!self.isMobile && isSafari) {\n          positionCalendar();\n        }\n\n        triggerEvent(\"onReady\");\n      }\n\n      function bindToInstance(fn) {\n        return fn.bind(self);\n      }\n\n      function setCalendarWidth() {\n        var config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) return;else if (config.noCalendar !== true) {\n          window.requestAnimationFrame(function () {\n            self.calendarContainer.style.visibility = \"hidden\";\n            self.calendarContainer.style.display = \"block\";\n\n            if (self.daysContainer !== undefined) {\n              var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n              self.daysContainer.style.width = daysWidth + \"px\";\n              self.calendarContainer.style.width = daysWidth + (self.weekWrapper !== undefined ? self.weekWrapper.offsetWidth : 0) + \"px\";\n              self.calendarContainer.style.removeProperty(\"visibility\");\n              self.calendarContainer.style.removeProperty(\"display\");\n            }\n          });\n        }\n      }\n\n      function updateTime(e) {\n        if (self.selectedDates.length === 0) return;\n\n        if (e !== undefined && e.type !== \"blur\") {\n          timeWrapper(e);\n        }\n\n        var prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n\n        if (self._input.value !== prevValue) {\n          self._debouncedChange();\n        }\n      }\n\n      function ampm2military(hour, amPM) {\n        return hour % 12 + 12 * int(amPM === self.l10n.amPM[1]);\n      }\n\n      function military2ampm(hour) {\n        switch (hour % 24) {\n          case 0:\n          case 12:\n            return 12;\n\n          default:\n            return hour % 12;\n        }\n      }\n\n      function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined) return;\n        var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24,\n            minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60,\n            seconds = self.secondElement !== undefined ? (parseInt(self.secondElement.value, 10) || 0) % 60 : 0;\n\n        if (self.amPM !== undefined) {\n          hours = ampm2military(hours, self.amPM.textContent);\n        }\n\n        var limitMinHours = self.config.minTime !== undefined || self.config.minDate && self.minDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.minDate, true) === 0;\n        var limitMaxHours = self.config.maxTime !== undefined || self.config.maxDate && self.maxDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.maxDate, true) === 0;\n\n        if (limitMaxHours) {\n          var maxTime = self.config.maxTime !== undefined ? self.config.maxTime : self.config.maxDate;\n          hours = Math.min(hours, maxTime.getHours());\n          if (hours === maxTime.getHours()) minutes = Math.min(minutes, maxTime.getMinutes());\n          if (minutes === maxTime.getMinutes()) seconds = Math.min(seconds, maxTime.getSeconds());\n        }\n\n        if (limitMinHours) {\n          var minTime = self.config.minTime !== undefined ? self.config.minTime : self.config.minDate;\n          hours = Math.max(hours, minTime.getHours());\n          if (hours === minTime.getHours()) minutes = Math.max(minutes, minTime.getMinutes());\n          if (minutes === minTime.getMinutes()) seconds = Math.max(seconds, minTime.getSeconds());\n        }\n\n        setHours(hours, minutes, seconds);\n      }\n\n      function setHoursFromDate(dateObj) {\n        var date = dateObj || self.latestSelectedDateObj;\n        if (date) setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n      }\n\n      function setDefaultHours() {\n        var hours = self.config.defaultHour;\n        var minutes = self.config.defaultMinute;\n        var seconds = self.config.defaultSeconds;\n\n        if (self.config.minDate !== undefined) {\n          var min_hr = self.config.minDate.getHours();\n          var min_minutes = self.config.minDate.getMinutes();\n          hours = Math.max(hours, min_hr);\n          if (hours === min_hr) minutes = Math.max(min_minutes, minutes);\n          if (hours === min_hr && minutes === min_minutes) seconds = self.config.minDate.getSeconds();\n        }\n\n        if (self.config.maxDate !== undefined) {\n          var max_hr = self.config.maxDate.getHours();\n          var max_minutes = self.config.maxDate.getMinutes();\n          hours = Math.min(hours, max_hr);\n          if (hours === max_hr) minutes = Math.min(max_minutes, minutes);\n          if (hours === max_hr && minutes === max_minutes) seconds = self.config.maxDate.getSeconds();\n        }\n\n        setHours(hours, minutes, seconds);\n      }\n\n      function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n          self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n\n        if (!self.hourElement || !self.minuteElement || self.isMobile) return;\n        self.hourElement.value = pad(!self.config.time_24hr ? (12 + hours) % 12 + 12 * int(hours % 12 === 0) : hours);\n        self.minuteElement.value = pad(minutes);\n        if (self.amPM !== undefined) self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n        if (self.secondElement !== undefined) self.secondElement.value = pad(seconds);\n      }\n\n      function onYearInput(event) {\n        var year = parseInt(event.target.value) + (event.delta || 0);\n\n        if (year / 1000 > 1 || event.key === \"Enter\" && !/[^\\d]/.test(year.toString())) {\n          changeYear(year);\n        }\n      }\n\n      function bind(element, event, handler, options) {\n        if (event instanceof Array) return event.forEach(function (ev) {\n          return bind(element, ev, handler, options);\n        });\n        if (element instanceof Array) return element.forEach(function (el) {\n          return bind(el, event, handler, options);\n        });\n        element.addEventListener(event, handler, options);\n\n        self._handlers.push({\n          element: element,\n          event: event,\n          handler: handler,\n          options: options\n        });\n      }\n\n      function onClick(handler) {\n        return function (evt) {\n          evt.which === 1 && handler(evt);\n        };\n      }\n\n      function triggerChange() {\n        triggerEvent(\"onChange\");\n      }\n\n      function bindEvents() {\n        if (self.config.wrap) {\n          [\"open\", \"close\", \"toggle\", \"clear\"].forEach(function (evt) {\n            Array.prototype.forEach.call(self.element.querySelectorAll(\"[data-\" + evt + \"]\"), function (el) {\n              return bind(el, \"click\", self[evt]);\n            });\n          });\n        }\n\n        if (self.isMobile) {\n          setupMobile();\n          return;\n        }\n\n        var debouncedResize = debounce(onResize, 50);\n        self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent)) bind(self.daysContainer, \"mouseover\", function (e) {\n          if (self.config.mode === \"range\") onMouseOver(e.target);\n        });\n        bind(window.document.body, \"keydown\", onKeyDown);\n        if (!self.config.static) bind(self._input, \"keydown\", onKeyDown);\n        if (!self.config.inline && !self.config.static) bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined) bind(window.document, \"click\", documentClick);else bind(window.document, \"mousedown\", onClick(documentClick));\n        bind(window.document, \"focus\", documentClick, {\n          capture: true\n        });\n\n        if (self.config.clickOpens === true) {\n          bind(self._input, \"focus\", self.open);\n          bind(self._input, \"mousedown\", onClick(self.open));\n        }\n\n        if (self.daysContainer !== undefined) {\n          bind(self.monthNav, \"mousedown\", onClick(onMonthNavClick));\n          bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n          bind(self.daysContainer, \"mousedown\", onClick(selectDate));\n        }\n\n        if (self.timeContainer !== undefined && self.minuteElement !== undefined && self.hourElement !== undefined) {\n          var selText = function selText(e) {\n            return e.target.select();\n          };\n\n          bind(self.timeContainer, [\"increment\"], updateTime);\n          bind(self.timeContainer, \"blur\", updateTime, {\n            capture: true\n          });\n          bind(self.timeContainer, \"mousedown\", onClick(timeIncrement));\n          bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n          if (self.secondElement !== undefined) bind(self.secondElement, \"focus\", function () {\n            return self.secondElement && self.secondElement.select();\n          });\n\n          if (self.amPM !== undefined) {\n            bind(self.amPM, \"mousedown\", onClick(function (e) {\n              updateTime(e);\n              triggerChange();\n            }));\n          }\n        }\n      }\n\n      function jumpToDate(jumpDate) {\n        var jumpTo = jumpDate !== undefined ? self.parseDate(jumpDate) : self.latestSelectedDateObj || (self.config.minDate && self.config.minDate > self.now ? self.config.minDate : self.config.maxDate && self.config.maxDate < self.now ? self.config.maxDate : self.now);\n\n        try {\n          if (jumpTo !== undefined) {\n            self.currentYear = jumpTo.getFullYear();\n            self.currentMonth = jumpTo.getMonth();\n          }\n        } catch (e) {\n          e.message = \"Invalid date supplied: \" + jumpTo;\n          self.config.errorHandler(e);\n        }\n\n        self.redraw();\n      }\n\n      function timeIncrement(e) {\n        if (~e.target.className.indexOf(\"arrow\")) incrementNumInput(e, e.target.classList.contains(\"arrowUp\") ? 1 : -1);\n      }\n\n      function incrementNumInput(e, delta, inputElem) {\n        var target = e && e.target;\n        var input = inputElem || target && target.parentNode && target.parentNode.firstChild;\n        var event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n      }\n\n      function build() {\n        var fragment = window.document.createDocumentFragment();\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n\n        if (!self.config.noCalendar) {\n          fragment.appendChild(buildMonthNav());\n          self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n\n          if (self.config.weekNumbers) {\n            var _buildWeeks = buildWeeks(),\n                weekWrapper = _buildWeeks.weekWrapper,\n                weekNumbers = _buildWeeks.weekNumbers;\n\n            self.innerContainer.appendChild(weekWrapper);\n            self.weekNumbers = weekNumbers;\n            self.weekWrapper = weekWrapper;\n          }\n\n          self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n          self.rContainer.appendChild(buildWeekdays());\n\n          if (!self.daysContainer) {\n            self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n            self.daysContainer.tabIndex = -1;\n          }\n\n          buildDays();\n          self.rContainer.appendChild(self.daysContainer);\n          self.innerContainer.appendChild(self.rContainer);\n          fragment.appendChild(self.innerContainer);\n        }\n\n        if (self.config.enableTime) {\n          fragment.appendChild(buildTime());\n        }\n\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n        toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        var customAppend = self.config.appendTo !== undefined && self.config.appendTo.nodeType !== undefined;\n\n        if (self.config.inline || self.config.static) {\n          self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n\n          if (self.config.inline) {\n            if (!customAppend && self.element.parentNode) self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);else if (self.config.appendTo !== undefined) self.config.appendTo.appendChild(self.calendarContainer);\n          }\n\n          if (self.config.static) {\n            var wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n            if (self.element.parentNode) self.element.parentNode.insertBefore(wrapper, self.element);\n            wrapper.appendChild(self.element);\n            if (self.altInput) wrapper.appendChild(self.altInput);\n            wrapper.appendChild(self.calendarContainer);\n          }\n        }\n\n        if (!self.config.static && !self.config.inline) (self.config.appendTo !== undefined ? self.config.appendTo : window.document.body).appendChild(self.calendarContainer);\n      }\n\n      function createDay(className, date, dayNumber, i) {\n        var dateIsEnabled = isEnabled(date, true),\n            dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n\n        if (className.indexOf(\"hidden\") === -1 && compareDates(date, self.now) === 0) {\n          self.todayDateElem = dayElement;\n          dayElement.classList.add(\"today\");\n          dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n\n        if (dateIsEnabled) {\n          dayElement.tabIndex = -1;\n\n          if (isDateSelected(date)) {\n            dayElement.classList.add(\"selected\");\n            self.selectedDateElem = dayElement;\n\n            if (self.config.mode === \"range\") {\n              toggleClass(dayElement, \"startRange\", self.selectedDates[0] && compareDates(date, self.selectedDates[0], true) === 0);\n              toggleClass(dayElement, \"endRange\", self.selectedDates[1] && compareDates(date, self.selectedDates[1], true) === 0);\n              if (className === \"nextMonthDay\") dayElement.classList.add(\"inRange\");\n            }\n          }\n        } else {\n          dayElement.classList.add(\"disabled\");\n        }\n\n        if (self.config.mode === \"range\") {\n          if (isDateInRange(date) && !isDateSelected(date)) dayElement.classList.add(\"inRange\");\n        }\n\n        if (self.weekNumbers && self.config.showMonths === 1 && className !== \"prevMonthDay\" && dayNumber % 7 === 1) {\n          self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n      }\n\n      function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\") onMouseOver(targetNode);\n      }\n\n      function getFirstAvailableDay(delta) {\n        var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        var endMonth = delta > 0 ? self.config.showMonths : -1;\n\n        for (var m = startMonth; m != endMonth; m += delta) {\n          var month = self.daysContainer.children[m];\n          var startIndex = delta > 0 ? 0 : month.children.length - 1;\n          var endIndex = delta > 0 ? month.children.length : -1;\n\n          for (var i = startIndex; i != endIndex; i += delta) {\n            var c = month.children[i];\n            if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj)) return c;\n          }\n        }\n\n        return undefined;\n      }\n\n      function getNextAvailableDay(current, delta) {\n        var givenMonth = current.className.indexOf(\"Month\") === -1 ? current.dateObj.getMonth() : self.currentMonth;\n        var endMonth = delta > 0 ? self.config.showMonths : -1;\n        var loopDelta = delta > 0 ? 1 : -1;\n\n        for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n          var month = self.daysContainer.children[m];\n          var startIndex = givenMonth - self.currentMonth === m ? current.$i + delta : delta < 0 ? month.children.length - 1 : 0;\n          var numMonthDays = month.children.length;\n\n          for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n            var c = month.children[i];\n            if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj) && Math.abs(current.$i - i) >= Math.abs(delta)) return focusOnDayElem(c);\n          }\n        }\n\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n      }\n\n      function focusOnDay(current, offset) {\n        var dayFocused = isInView(document.activeElement || document.body);\n        var startElem = current !== undefined ? current : dayFocused ? document.activeElement : self.selectedDateElem !== undefined && isInView(self.selectedDateElem) ? self.selectedDateElem : self.todayDateElem !== undefined && isInView(self.todayDateElem) ? self.todayDateElem : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) return self._input.focus();\n        if (!dayFocused) return focusOnDayElem(startElem);\n        getNextAvailableDay(startElem, offset);\n      }\n\n      function buildMonthDays(year, month) {\n        var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12);\n        var daysInMonth = self.utils.getDaysInMonth(month),\n            days = window.document.createDocumentFragment(),\n            isMultiMonth = self.config.showMonths > 1,\n            prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\",\n            nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        var dayNumber = prevMonthDays + 1 - firstOfMonth,\n            dayIndex = 0;\n\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n          days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n          days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n\n        for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth && (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n          days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n\n        var dayContainer = createElement(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n      }\n\n      function buildDays() {\n        if (self.daysContainer === undefined) {\n          return;\n        }\n\n        clearNode(self.daysContainer);\n        if (self.weekNumbers) clearNode(self.weekNumbers);\n        var frag = document.createDocumentFragment();\n\n        for (var i = 0; i < self.config.showMonths; i++) {\n          var d = new Date(self.currentYear, self.currentMonth, 1);\n          d.setMonth(self.currentMonth + i);\n          frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n          onMouseOver();\n        }\n      }\n\n      function buildMonth() {\n        var container = createElement(\"div\", \"flatpickr-month\");\n        var monthNavFragment = window.document.createDocumentFragment();\n        var monthElement = createElement(\"span\", \"cur-month\");\n        var yearInput = createNumberInput(\"cur-year\", {\n          tabindex: \"-1\"\n        });\n        var yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) yearElement.setAttribute(\"data-min\", self.config.minDate.getFullYear().toString());\n\n        if (self.config.maxDate) {\n          yearElement.setAttribute(\"data-max\", self.config.maxDate.getFullYear().toString());\n          yearElement.disabled = !!self.config.minDate && self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n\n        var currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n          container: container,\n          yearElement: yearElement,\n          monthElement: monthElement\n        };\n      }\n\n      function buildMonths() {\n        clearNode(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n\n        for (var m = self.config.showMonths; m--;) {\n          var month = buildMonth();\n          self.yearElements.push(month.yearElement);\n          self.monthElements.push(month.monthElement);\n          self.monthNav.appendChild(month.container);\n        }\n\n        self.monthNav.appendChild(self.nextMonthNav);\n      }\n\n      function buildMonthNav() {\n        self.monthNav = createElement(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n          get: function get() {\n            return self.__hidePrevMonthArrow;\n          },\n          set: function set(bool) {\n            if (self.__hidePrevMonthArrow !== bool) {\n              toggleClass(self.prevMonthNav, \"disabled\", bool);\n              self.__hidePrevMonthArrow = bool;\n            }\n          }\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n          get: function get() {\n            return self.__hideNextMonthArrow;\n          },\n          set: function set(bool) {\n            if (self.__hideNextMonthArrow !== bool) {\n              toggleClass(self.nextMonthNav, \"disabled\", bool);\n              self.__hideNextMonthArrow = bool;\n            }\n          }\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n      }\n\n      function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar) self.calendarContainer.classList.add(\"noCalendar\");\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        var separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n        var hourInput = createNumberInput(\"flatpickr-hour\");\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        var minuteInput = createNumberInput(\"flatpickr-minute\");\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getHours() : self.config.time_24hr ? self.config.defaultHour : military2ampm(self.config.defaultHour));\n        self.minuteElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getMinutes() : self.config.defaultMinute);\n        self.hourElement.setAttribute(\"data-step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"data-step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"data-min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"data-max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.minuteElement.setAttribute(\"data-min\", \"0\");\n        self.minuteElement.setAttribute(\"data-max\", \"59\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr) self.timeContainer.classList.add(\"time24hr\");\n\n        if (self.config.enableSeconds) {\n          self.timeContainer.classList.add(\"hasSeconds\");\n          var secondInput = createNumberInput(\"flatpickr-second\");\n          self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n          self.secondElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getSeconds() : self.config.defaultSeconds);\n          self.secondElement.setAttribute(\"data-step\", self.minuteElement.getAttribute(\"data-step\"));\n          self.secondElement.setAttribute(\"data-min\", self.minuteElement.getAttribute(\"data-min\"));\n          self.secondElement.setAttribute(\"data-max\", self.minuteElement.getAttribute(\"data-max\"));\n          self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n          self.timeContainer.appendChild(secondInput);\n        }\n\n        if (!self.config.time_24hr) {\n          self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj ? self.hourElement.value : self.config.defaultHour) > 11)]);\n          self.amPM.title = self.l10n.toggleTitle;\n          self.amPM.tabIndex = -1;\n          self.timeContainer.appendChild(self.amPM);\n        }\n\n        return self.timeContainer;\n      }\n\n      function buildWeekdays() {\n        if (!self.weekdayContainer) self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");else clearNode(self.weekdayContainer);\n\n        for (var i = self.config.showMonths; i--;) {\n          var container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n          self.weekdayContainer.appendChild(container);\n        }\n\n        updateWeekdays();\n        return self.weekdayContainer;\n      }\n\n      function updateWeekdays() {\n        var firstDayOfWeek = self.l10n.firstDayOfWeek;\n        var weekdays = self.l10n.weekdays.shorthand.concat();\n\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n          weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));\n        }\n\n        for (var i = self.config.showMonths; i--;) {\n          self.weekdayContainer.children[i].innerHTML = \"\\n      <span class=flatpickr-weekday>\\n        \" + weekdays.join(\"</span><span class=flatpickr-weekday>\") + \"\\n      </span>\\n      \";\n        }\n      }\n\n      function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        var weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        var weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n          weekWrapper: weekWrapper,\n          weekNumbers: weekNumbers\n        };\n      }\n\n      function changeMonth(value, is_offset) {\n        if (is_offset === void 0) {\n          is_offset = true;\n        }\n\n        var delta = is_offset ? value : value - self.currentMonth;\n        if (delta < 0 && self._hidePrevMonthArrow === true || delta > 0 && self._hideNextMonthArrow === true) return;\n        self.currentMonth += delta;\n\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n          self.currentYear += self.currentMonth > 11 ? 1 : -1;\n          self.currentMonth = (self.currentMonth + 12) % 12;\n          triggerEvent(\"onYearChange\");\n        }\n\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n      }\n\n      function clear(triggerChangeEvent) {\n        if (triggerChangeEvent === void 0) {\n          triggerChangeEvent = true;\n        }\n\n        self.input.value = \"\";\n        if (self.altInput !== undefined) self.altInput.value = \"\";\n        if (self.mobileInput !== undefined) self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        self.showTimeInput = false;\n\n        if (self.config.enableTime === true) {\n          setDefaultHours();\n        }\n\n        self.redraw();\n        if (triggerChangeEvent) triggerEvent(\"onChange\");\n      }\n\n      function close() {\n        self.isOpen = false;\n\n        if (!self.isMobile) {\n          self.calendarContainer.classList.remove(\"open\");\n\n          self._input.classList.remove(\"active\");\n        }\n\n        triggerEvent(\"onClose\");\n      }\n\n      function destroy() {\n        if (self.config !== undefined) triggerEvent(\"onDestroy\");\n\n        for (var i = self._handlers.length; i--;) {\n          var h = self._handlers[i];\n          h.element.removeEventListener(h.event, h.handler, h.options);\n        }\n\n        self._handlers = [];\n\n        if (self.mobileInput) {\n          if (self.mobileInput.parentNode) self.mobileInput.parentNode.removeChild(self.mobileInput);\n          self.mobileInput = undefined;\n        } else if (self.calendarContainer && self.calendarContainer.parentNode) {\n          if (self.config.static && self.calendarContainer.parentNode) {\n            var wrapper = self.calendarContainer.parentNode;\n            wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n\n            if (wrapper.parentNode) {\n              while (wrapper.firstChild) {\n                wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n              }\n\n              wrapper.parentNode.removeChild(wrapper);\n            }\n          } else self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n\n        if (self.altInput) {\n          self.input.type = \"text\";\n          if (self.altInput.parentNode) self.altInput.parentNode.removeChild(self.altInput);\n          delete self.altInput;\n        }\n\n        if (self.input) {\n          self.input.type = self.input._type;\n          self.input.classList.remove(\"flatpickr-input\");\n          self.input.removeAttribute(\"readonly\");\n          self.input.value = \"\";\n        }\n\n        [\"_showTimeInput\", \"latestSelectedDateObj\", \"_hideNextMonthArrow\", \"_hidePrevMonthArrow\", \"__hideNextMonthArrow\", \"__hidePrevMonthArrow\", \"isMobile\", \"isOpen\", \"selectedDateElem\", \"minDateHasTime\", \"maxDateHasTime\", \"days\", \"daysContainer\", \"_input\", \"_positionElement\", \"innerContainer\", \"rContainer\", \"monthNav\", \"todayDateElem\", \"calendarContainer\", \"weekdayContainer\", \"prevMonthNav\", \"nextMonthNav\", \"currentMonthElement\", \"currentYearElement\", \"navigationCurrentMonth\", \"selectedDateElem\", \"config\"].forEach(function (k) {\n          try {\n            delete self[k];\n          } catch (_) {}\n        });\n      }\n\n      function isCalendarElem(elem) {\n        if (self.config.appendTo && self.config.appendTo.contains(elem)) return true;\n        return self.calendarContainer.contains(elem);\n      }\n\n      function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n          var isCalendarElement = isCalendarElem(e.target);\n          var isInput = e.target === self.input || e.target === self.altInput || self.element.contains(e.target) || e.path && e.path.indexOf && (~e.path.indexOf(self.input) || ~e.path.indexOf(self.altInput));\n          var lostFocus = e.type === \"blur\" ? isInput && e.relatedTarget && !isCalendarElem(e.relatedTarget) : !isInput && !isCalendarElement;\n          var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {\n            return elem.contains(e.target);\n          });\n\n          if (lostFocus && isIgnored) {\n            self.close();\n\n            if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n              self.clear(false);\n              self.redraw();\n            }\n          }\n        }\n      }\n\n      function changeYear(newYear) {\n        if (!newYear || self.config.minDate && newYear < self.config.minDate.getFullYear() || self.config.maxDate && newYear > self.config.maxDate.getFullYear()) return;\n        var newYearNum = newYear,\n            isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n\n        if (self.config.maxDate && self.currentYear === self.config.maxDate.getFullYear()) {\n          self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        } else if (self.config.minDate && self.currentYear === self.config.minDate.getFullYear()) {\n          self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n\n        if (isNewYear) {\n          self.redraw();\n          triggerEvent(\"onYearChange\");\n        }\n      }\n\n      function isEnabled(date, timeless) {\n        if (timeless === void 0) {\n          timeless = true;\n        }\n\n        var dateToCheck = self.parseDate(date, undefined, timeless);\n        if (self.config.minDate && dateToCheck && compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0 || self.config.maxDate && dateToCheck && compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0) return false;\n        if (self.config.enable.length === 0 && self.config.disable.length === 0) return true;\n        if (dateToCheck === undefined) return false;\n        var bool = self.config.enable.length > 0,\n            array = bool ? self.config.enable : self.config.disable;\n\n        for (var i = 0, d; i < array.length; i++) {\n          d = array[i];\n          if (typeof d === \"function\" && d(dateToCheck)) return bool;else if (d instanceof Date && dateToCheck !== undefined && d.getTime() === dateToCheck.getTime()) return bool;else if (typeof d === \"string\" && dateToCheck !== undefined) {\n            var parsed = self.parseDate(d, undefined, true);\n            return parsed && parsed.getTime() === dateToCheck.getTime() ? bool : !bool;\n          } else if (typeof d === \"object\" && dateToCheck !== undefined && d.from && d.to && dateToCheck.getTime() >= d.from.getTime() && dateToCheck.getTime() <= d.to.getTime()) return bool;\n        }\n\n        return !bool;\n      }\n\n      function isInView(elem) {\n        if (self.daysContainer !== undefined) return elem.className.indexOf(\"hidden\") === -1 && self.daysContainer.contains(elem);\n        return false;\n      }\n\n      function onKeyDown(e) {\n        var isInput = e.target === self._input;\n        var allowInput = self.config.allowInput;\n        var allowKeydown = self.isOpen && (!allowInput || !isInput);\n        var allowInlineKeydown = self.config.inline && isInput && !allowInput;\n\n        if (e.keyCode === 13 && isInput) {\n          if (allowInput) {\n            self.setDate(self._input.value, true, e.target === self.altInput ? self.config.altFormat : self.config.dateFormat);\n            return e.target.blur();\n          } else self.open();\n        } else if (isCalendarElem(e.target) || allowKeydown || allowInlineKeydown) {\n          var isTimeObj = !!self.timeContainer && self.timeContainer.contains(e.target);\n\n          switch (e.keyCode) {\n            case 13:\n              if (isTimeObj) updateTime();else selectDate(e);\n              break;\n\n            case 27:\n              e.preventDefault();\n              focusAndClose();\n              break;\n\n            case 8:\n            case 46:\n              if (isInput && !self.config.allowInput) {\n                e.preventDefault();\n                self.clear();\n              }\n\n              break;\n\n            case 37:\n            case 39:\n              if (!isTimeObj) {\n                e.preventDefault();\n\n                if (self.daysContainer !== undefined && (allowInput === false || isInView(document.activeElement))) {\n                  var _delta = e.keyCode === 39 ? 1 : -1;\n\n                  if (!e.ctrlKey) focusOnDay(undefined, _delta);else {\n                    changeMonth(_delta);\n                    focusOnDay(getFirstAvailableDay(1), 0);\n                  }\n                }\n              } else if (self.hourElement) self.hourElement.focus();\n\n              break;\n\n            case 38:\n            case 40:\n              e.preventDefault();\n              var delta = e.keyCode === 40 ? 1 : -1;\n\n              if (self.daysContainer && e.target.$i !== undefined) {\n                if (e.ctrlKey) {\n                  changeYear(self.currentYear - delta);\n                  focusOnDay(getFirstAvailableDay(1), 0);\n                } else if (!isTimeObj) focusOnDay(undefined, delta * 7);\n              } else if (self.config.enableTime) {\n                if (!isTimeObj && self.hourElement) self.hourElement.focus();\n                updateTime(e);\n\n                self._debouncedChange();\n              }\n\n              break;\n\n            case 9:\n              if (!isTimeObj) {\n                self.element.focus();\n                break;\n              }\n\n              var elems = [self.hourElement, self.minuteElement, self.secondElement, self.amPM].filter(function (x) {\n                return x;\n              });\n              var i = elems.indexOf(e.target);\n\n              if (i !== -1) {\n                var target = elems[i + (e.shiftKey ? -1 : 1)];\n\n                if (target !== undefined) {\n                  e.preventDefault();\n                  target.focus();\n                } else {\n                  self.element.focus();\n                }\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        if (self.amPM !== undefined && e.target === self.amPM) {\n          switch (e.key) {\n            case self.l10n.amPM[0].charAt(0):\n            case self.l10n.amPM[0].charAt(0).toLowerCase():\n              self.amPM.textContent = self.l10n.amPM[0];\n              setHoursFromInputs();\n              updateValue();\n              break;\n\n            case self.l10n.amPM[1].charAt(0):\n            case self.l10n.amPM[1].charAt(0).toLowerCase():\n              self.amPM.textContent = self.l10n.amPM[1];\n              setHoursFromInputs();\n              updateValue();\n              break;\n          }\n        }\n\n        triggerEvent(\"onKeyDown\", e);\n      }\n\n      function onMouseOver(elem) {\n        if (self.selectedDates.length !== 1 || elem && (!elem.classList.contains(\"flatpickr-day\") || elem.classList.contains(\"disabled\"))) return;\n        var hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(),\n            initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(),\n            rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()),\n            rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime()),\n            lastDate = self.daysContainer.lastChild.lastChild.dateObj.getTime();\n        var containsDisabled = false;\n        var minRange = 0,\n            maxRange = 0;\n\n        for (var t = rangeStartDate; t < lastDate; t += duration.DAY) {\n          if (!isEnabled(new Date(t), true)) {\n            containsDisabled = containsDisabled || t > rangeStartDate && t < rangeEndDate;\n            if (t < initialDate && (!minRange || t > minRange)) minRange = t;else if (t > initialDate && (!maxRange || t < maxRange)) maxRange = t;\n          }\n        }\n\n        for (var m = 0; m < self.config.showMonths; m++) {\n          var month = self.daysContainer.children[m];\n          var prevMonth = self.daysContainer.children[m - 1];\n\n          var _loop = function _loop(i, l) {\n            var dayElem = month.children[i],\n                date = dayElem.dateObj;\n            var timestamp = date.getTime();\n            var outOfRange = minRange > 0 && timestamp < minRange || maxRange > 0 && timestamp > maxRange;\n\n            if (outOfRange) {\n              dayElem.classList.add(\"notAllowed\");\n              [\"inRange\", \"startRange\", \"endRange\"].forEach(function (c) {\n                dayElem.classList.remove(c);\n              });\n              return \"continue\";\n            } else if (containsDisabled && !outOfRange) return \"continue\";\n\n            [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach(function (c) {\n              dayElem.classList.remove(c);\n            });\n\n            if (elem !== undefined) {\n              elem.classList.add(hoverDate < self.selectedDates[0].getTime() ? \"startRange\" : \"endRange\");\n\n              if (month.contains(elem) || !(m > 0 && prevMonth && prevMonth.lastChild.dateObj.getTime() >= timestamp)) {\n                if (initialDate < hoverDate && timestamp === initialDate) dayElem.classList.add(\"startRange\");else if (initialDate > hoverDate && timestamp === initialDate) dayElem.classList.add(\"endRange\");\n                if (timestamp >= minRange && (maxRange === 0 || timestamp <= maxRange) && isBetween(timestamp, initialDate, hoverDate)) dayElem.classList.add(\"inRange\");\n              }\n            }\n          };\n\n          for (var i = 0, l = month.children.length; i < l; i++) {\n            var _ret = _loop(i, l);\n\n            if (_ret === \"continue\") continue;\n          }\n        }\n      }\n\n      function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline) positionCalendar();\n      }\n\n      function open(e, positionElement) {\n        if (positionElement === void 0) {\n          positionElement = self._positionElement;\n        }\n\n        if (self.isMobile === true) {\n          if (e) {\n            e.preventDefault();\n            e.target && e.target.blur();\n          }\n\n          if (self.mobileInput !== undefined) {\n            self.mobileInput.focus();\n            self.mobileInput.click();\n          }\n\n          triggerEvent(\"onOpen\");\n          return;\n        }\n\n        if (self._input.disabled || self.config.inline) return;\n        var wasOpen = self.isOpen;\n        self.isOpen = true;\n\n        if (!wasOpen) {\n          self.calendarContainer.classList.add(\"open\");\n\n          self._input.classList.add(\"active\");\n\n          triggerEvent(\"onOpen\");\n          positionCalendar(positionElement);\n        }\n\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n          if (self.selectedDates.length === 0) {\n            self.setDate(self.config.minDate !== undefined ? new Date(self.config.minDate.getTime()) : new Date(), false);\n            setDefaultHours();\n            updateValue();\n          }\n\n          if (self.config.allowInput === false && (e === undefined || !self.timeContainer.contains(e.relatedTarget))) {\n            setTimeout(function () {\n              return self.hourElement.select();\n            }, 50);\n          }\n        }\n      }\n\n      function minMaxDateSetter(type) {\n        return function (date) {\n          var dateObj = self.config[\"_\" + type + \"Date\"] = self.parseDate(date, self.config.dateFormat);\n          var inverseDateObj = self.config[\"_\" + (type === \"min\" ? \"max\" : \"min\") + \"Date\"];\n\n          if (dateObj !== undefined) {\n            self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] = dateObj.getHours() > 0 || dateObj.getMinutes() > 0 || dateObj.getSeconds() > 0;\n          }\n\n          if (self.selectedDates) {\n            self.selectedDates = self.selectedDates.filter(function (d) {\n              return isEnabled(d);\n            });\n            if (!self.selectedDates.length && type === \"min\") setHoursFromDate(dateObj);\n            updateValue();\n          }\n\n          if (self.daysContainer) {\n            redraw();\n            if (dateObj !== undefined) self.currentYearElement[type] = dateObj.getFullYear().toString();else self.currentYearElement.removeAttribute(type);\n            self.currentYearElement.disabled = !!inverseDateObj && dateObj !== undefined && inverseDateObj.getFullYear() === dateObj.getFullYear();\n          }\n        };\n      }\n\n      function parseConfig() {\n        var boolOpts = [\"wrap\", \"weekNumbers\", \"allowInput\", \"clickOpens\", \"time_24hr\", \"enableTime\", \"noCalendar\", \"altInput\", \"shorthandCurrentMonth\", \"inline\", \"static\", \"enableSeconds\", \"disableMobile\"];\n        var userConfig = Object.assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));\n        var formats$$1 = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n          get: function get() {\n            return self.config._enable;\n          },\n          set: function set(dates) {\n            self.config._enable = parseDateRules(dates);\n          }\n        });\n        Object.defineProperty(self.config, \"disable\", {\n          get: function get() {\n            return self.config._disable;\n          },\n          set: function set(dates) {\n            self.config._disable = parseDateRules(dates);\n          }\n        });\n        var timeMode = userConfig.mode === \"time\";\n\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n          formats$$1.dateFormat = userConfig.noCalendar || timeMode ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\") : flatpickr.defaultConfig.dateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n\n        if (userConfig.altInput && (userConfig.enableTime || timeMode) && !userConfig.altFormat) {\n          formats$$1.altFormat = userConfig.noCalendar || timeMode ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\") : flatpickr.defaultConfig.altFormat + (\" h:i\" + (userConfig.enableSeconds ? \":S\" : \"\") + \" K\");\n        }\n\n        Object.defineProperty(self.config, \"minDate\", {\n          get: function get() {\n            return self.config._minDate;\n          },\n          set: minMaxDateSetter(\"min\")\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n          get: function get() {\n            return self.config._maxDate;\n          },\n          set: minMaxDateSetter(\"max\")\n        });\n\n        var minMaxTimeSetter = function minMaxTimeSetter(type) {\n          return function (val) {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i\");\n          };\n        };\n\n        Object.defineProperty(self.config, \"minTime\", {\n          get: function get() {\n            return self.config._minTime;\n          },\n          set: minMaxTimeSetter(\"min\")\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n          get: function get() {\n            return self.config._maxTime;\n          },\n          set: minMaxTimeSetter(\"max\")\n        });\n\n        if (userConfig.mode === \"time\") {\n          self.config.noCalendar = true;\n          self.config.enableTime = true;\n        }\n\n        Object.assign(self.config, formats$$1, userConfig);\n\n        for (var i = 0; i < boolOpts.length; i++) {\n          self.config[boolOpts[i]] = self.config[boolOpts[i]] === true || self.config[boolOpts[i]] === \"true\";\n        }\n\n        HOOKS.filter(function (hook) {\n          return self.config[hook] !== undefined;\n        }).forEach(function (hook) {\n          self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile = !self.config.disableMobile && !self.config.inline && self.config.mode === \"single\" && !self.config.disable.length && !self.config.enable.length && !self.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n        for (var _i = 0; _i < self.config.plugins.length; _i++) {\n          var pluginConf = self.config.plugins[_i](self) || {};\n\n          for (var key in pluginConf) {\n            if (HOOKS.indexOf(key) > -1) {\n              self.config[key] = arrayify(pluginConf[key]).map(bindToInstance).concat(self.config[key]);\n            } else if (typeof userConfig[key] === \"undefined\") self.config[key] = pluginConf[key];\n          }\n        }\n\n        triggerEvent(\"onParseConfig\");\n      }\n\n      function setupLocale() {\n        if (typeof self.config.locale !== \"object\" && typeof flatpickr.l10ns[self.config.locale] === \"undefined\") self.config.errorHandler(new Error(\"flatpickr: invalid locale \" + self.config.locale));\n        self.l10n = Object.assign({}, flatpickr.l10ns.default, typeof self.config.locale === \"object\" ? self.config.locale : self.config.locale !== \"default\" ? flatpickr.l10ns[self.config.locale] : undefined);\n        tokenRegex.K = \"(\" + self.l10n.amPM[0] + \"|\" + self.l10n.amPM[1] + \"|\" + self.l10n.amPM[0].toLowerCase() + \"|\" + self.l10n.amPM[1].toLowerCase() + \")\";\n        self.formatDate = createDateFormatter(self);\n        self.parseDate = createDateParser({\n          config: self.config,\n          l10n: self.l10n\n        });\n      }\n\n      function positionCalendar(customPositionElement) {\n        if (self.calendarContainer === undefined) return;\n        triggerEvent(\"onPreCalendarPosition\");\n        var positionElement = customPositionElement || self._positionElement;\n        var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, function (acc, child) {\n          return acc + child.offsetHeight;\n        }, 0),\n            calendarWidth = self.calendarContainer.offsetWidth,\n            configPos = self.config.position.split(\" \"),\n            configPosVertical = configPos[0],\n            configPosHorizontal = configPos.length > 1 ? configPos[1] : null,\n            inputBounds = positionElement.getBoundingClientRect(),\n            distanceFromBottom = window.innerHeight - inputBounds.bottom,\n            showOnTop = configPosVertical === \"above\" || configPosVertical !== \"below\" && distanceFromBottom < calendarHeight && inputBounds.top > calendarHeight;\n        var top = window.pageYOffset + inputBounds.top + (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline) return;\n        var left = window.pageXOffset + inputBounds.left - (configPosHorizontal != null && configPosHorizontal === \"center\" ? (calendarWidth - inputBounds.width) / 2 : 0);\n        var right = window.document.body.offsetWidth - inputBounds.right;\n        var rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static) return;\n        self.calendarContainer.style.top = top + \"px\";\n\n        if (!rightMost) {\n          self.calendarContainer.style.left = left + \"px\";\n          self.calendarContainer.style.right = \"auto\";\n        } else {\n          self.calendarContainer.style.left = \"auto\";\n          self.calendarContainer.style.right = right + \"px\";\n        }\n      }\n\n      function redraw() {\n        if (self.config.noCalendar || self.isMobile) return;\n        updateNavigationCurrentMonth();\n        buildDays();\n      }\n\n      function focusAndClose() {\n        self._input.focus();\n\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 || navigator.msMaxTouchPoints !== undefined) {\n          setTimeout(self.close, 0);\n        } else {\n          self.close();\n        }\n      }\n\n      function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        var isSelectable = function isSelectable(day) {\n          return day.classList && day.classList.contains(\"flatpickr-day\") && !day.classList.contains(\"disabled\") && !day.classList.contains(\"notAllowed\");\n        };\n\n        var t = findParent(e.target, isSelectable);\n        if (t === undefined) return;\n        var target = t;\n        var selectedDate = self.latestSelectedDateObj = new Date(target.dateObj.getTime());\n        var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth || selectedDate.getMonth() > self.currentMonth + self.config.showMonths - 1) && self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\") self.selectedDates = [selectedDate];else if (self.config.mode === \"multiple\") {\n          var selectedIndex = isDateSelected(selectedDate);\n          if (selectedIndex) self.selectedDates.splice(parseInt(selectedIndex), 1);else self.selectedDates.push(selectedDate);\n        } else if (self.config.mode === \"range\") {\n          if (self.selectedDates.length === 2) self.clear(false);\n          self.selectedDates.push(selectedDate);\n          if (compareDates(selectedDate, self.selectedDates[0], true) !== 0) self.selectedDates.sort(function (a, b) {\n            return a.getTime() - b.getTime();\n          });\n        }\n        setHoursFromInputs();\n\n        if (shouldChangeMonth) {\n          var isNewYear = self.currentYear !== selectedDate.getFullYear();\n          self.currentYear = selectedDate.getFullYear();\n          self.currentMonth = selectedDate.getMonth();\n          if (isNewYear) triggerEvent(\"onYearChange\");\n          triggerEvent(\"onMonthChange\");\n        }\n\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (self.config.enableTime) setTimeout(function () {\n          return self.showTimeInput = true;\n        }, 50);\n        if (!shouldChangeMonth && self.config.mode !== \"range\" && self.config.showMonths === 1) focusOnDayElem(target);else self.selectedDateElem && self.selectedDateElem.focus();\n        if (self.hourElement !== undefined) setTimeout(function () {\n          return self.hourElement !== undefined && self.hourElement.select();\n        }, 451);\n\n        if (self.config.closeOnSelect) {\n          var single = self.config.mode === \"single\" && !self.config.enableTime;\n          var range = self.config.mode === \"range\" && self.selectedDates.length === 2 && !self.config.enableTime;\n\n          if (single || range) {\n            focusAndClose();\n          }\n        }\n\n        triggerChange();\n      }\n\n      var CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays]\n      };\n\n      function set(option, value) {\n        if (option !== null && typeof option === \"object\") Object.assign(self.config, option);else {\n          self.config[option] = value;\n          if (CALLBACKS[option] !== undefined) CALLBACKS[option].forEach(function (x) {\n            return x();\n          });else if (HOOKS.indexOf(option) > -1) self.config[option] = arrayify(value);\n        }\n        self.redraw();\n        jumpToDate();\n        updateValue(false);\n      }\n\n      function setSelectedDate(inputDate, format) {\n        var dates = [];\n        if (inputDate instanceof Array) dates = inputDate.map(function (d) {\n          return self.parseDate(d, format);\n        });else if (inputDate instanceof Date || typeof inputDate === \"number\") dates = [self.parseDate(inputDate, format)];else if (typeof inputDate === \"string\") {\n          switch (self.config.mode) {\n            case \"single\":\n            case \"time\":\n              dates = [self.parseDate(inputDate, format)];\n              break;\n\n            case \"multiple\":\n              dates = inputDate.split(self.config.conjunction).map(function (date) {\n                return self.parseDate(date, format);\n              });\n              break;\n\n            case \"range\":\n              dates = inputDate.split(self.l10n.rangeSeparator).map(function (date) {\n                return self.parseDate(date, format);\n              });\n              break;\n\n            default:\n              break;\n          }\n        } else self.config.errorHandler(new Error(\"Invalid date supplied: \" + JSON.stringify(inputDate)));\n        self.selectedDates = dates.filter(function (d) {\n          return d instanceof Date && isEnabled(d, false);\n        });\n        if (self.config.mode === \"range\") self.selectedDates.sort(function (a, b) {\n          return a.getTime() - b.getTime();\n        });\n      }\n\n      function setDate(date, triggerChange, format) {\n        if (triggerChange === void 0) {\n          triggerChange = false;\n        }\n\n        if (format === void 0) {\n          format = self.config.dateFormat;\n        }\n\n        if (date !== 0 && !date || date instanceof Array && date.length === 0) return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.showTimeInput = self.selectedDates.length > 0;\n        self.latestSelectedDateObj = self.selectedDates[0];\n        self.redraw();\n        jumpToDate();\n        setHoursFromDate();\n        updateValue(triggerChange);\n        if (triggerChange) triggerEvent(\"onChange\");\n      }\n\n      function parseDateRules(arr) {\n        return arr.slice().map(function (rule) {\n          if (typeof rule === \"string\" || typeof rule === \"number\" || rule instanceof Date) {\n            return self.parseDate(rule, undefined, true);\n          } else if (rule && typeof rule === \"object\" && rule.from && rule.to) return {\n            from: self.parseDate(rule.from, undefined),\n            to: self.parseDate(rule.to, undefined)\n          };\n\n          return rule;\n        }).filter(function (x) {\n          return x;\n        });\n      }\n\n      function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        var preloadedDate = self.config.defaultDate || ((self.input.nodeName === \"INPUT\" || self.input.nodeName === \"TEXTAREA\") && self.input.placeholder && self.input.value === self.input.placeholder ? null : self.input.value);\n        if (preloadedDate) setSelectedDate(preloadedDate, self.config.dateFormat);\n        var initialDate = self.selectedDates.length > 0 ? self.selectedDates[0] : self.config.minDate && self.config.minDate.getTime() > self.now.getTime() ? self.config.minDate : self.config.maxDate && self.config.maxDate.getTime() < self.now.getTime() ? self.config.maxDate : self.now;\n        self.currentYear = initialDate.getFullYear();\n        self.currentMonth = initialDate.getMonth();\n        if (self.selectedDates.length > 0) self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined) self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined) self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime = !!self.config.minDate && (self.config.minDate.getHours() > 0 || self.config.minDate.getMinutes() > 0 || self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime = !!self.config.maxDate && (self.config.maxDate.getHours() > 0 || self.config.maxDate.getMinutes() > 0 || self.config.maxDate.getSeconds() > 0);\n        Object.defineProperty(self, \"showTimeInput\", {\n          get: function get() {\n            return self._showTimeInput;\n          },\n          set: function set(bool) {\n            self._showTimeInput = bool;\n            if (self.calendarContainer) toggleClass(self.calendarContainer, \"showTimeInput\", bool);\n            self.isOpen && positionCalendar();\n          }\n        });\n      }\n\n      function setupInputs() {\n        self.input = self.config.wrap ? element.querySelector(\"[data-input]\") : element;\n\n        if (!self.input) {\n          self.config.errorHandler(new Error(\"Invalid input element specified\"));\n          return;\n        }\n\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n\n        if (self.config.altInput) {\n          self.altInput = createElement(self.input.nodeName, self.input.className + \" \" + self.config.altInputClass);\n          self._input = self.altInput;\n          self.altInput.placeholder = self.input.placeholder;\n          self.altInput.disabled = self.input.disabled;\n          self.altInput.required = self.input.required;\n          self.altInput.tabIndex = self.input.tabIndex;\n          self.altInput.type = \"text\";\n          self.input.setAttribute(\"type\", \"hidden\");\n          if (!self.config.static && self.input.parentNode) self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n\n        if (!self.config.allowInput) self._input.setAttribute(\"readonly\", \"readonly\");\n        self._positionElement = self.config.positionElement || self._input;\n      }\n\n      function setupMobile() {\n        var inputType = self.config.enableTime ? self.config.noCalendar ? \"time\" : \"datetime-local\" : \"date\";\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.step = self.input.getAttribute(\"step\") || \"any\";\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr = inputType === \"datetime-local\" ? \"Y-m-d\\\\TH:i:S\" : inputType === \"date\" ? \"Y-m-d\" : \"H:i:S\";\n\n        if (self.selectedDates.length > 0) {\n          self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n\n        if (self.config.minDate) self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate) self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined) self.altInput.type = \"hidden\";\n\n        try {\n          if (self.input.parentNode) self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        } catch (_a) {}\n\n        bind(self.mobileInput, \"change\", function (e) {\n          self.setDate(e.target.value, false, self.mobileFormatStr);\n          triggerEvent(\"onChange\");\n          triggerEvent(\"onClose\");\n        });\n      }\n\n      function toggle(e) {\n        if (self.isOpen === true) return self.close();\n        self.open(e);\n      }\n\n      function triggerEvent(event, data) {\n        if (self.config === undefined) return;\n        var hooks = self.config[event];\n\n        if (hooks !== undefined && hooks.length > 0) {\n          for (var i = 0; hooks[i] && i < hooks.length; i++) {\n            hooks[i](self.selectedDates, self.input.value, self, data);\n          }\n        }\n\n        if (event === \"onChange\") {\n          self.input.dispatchEvent(createEvent(\"change\"));\n          self.input.dispatchEvent(createEvent(\"input\"));\n        }\n      }\n\n      function createEvent(name) {\n        var e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n      }\n\n      function isDateSelected(date) {\n        for (var i = 0; i < self.selectedDates.length; i++) {\n          if (compareDates(self.selectedDates[i], date) === 0) return \"\" + i;\n        }\n\n        return false;\n      }\n\n      function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2) return false;\n        return compareDates(date, self.selectedDates[0]) >= 0 && compareDates(date, self.selectedDates[1]) <= 0;\n      }\n\n      function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav) return;\n        self.yearElements.forEach(function (yearElement, i) {\n          var d = new Date(self.currentYear, self.currentMonth, 1);\n          d.setMonth(self.currentMonth + i);\n          self.monthElements[i].textContent = monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n          yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow = self.config.minDate !== undefined && (self.currentYear === self.config.minDate.getFullYear() ? self.currentMonth <= self.config.minDate.getMonth() : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow = self.config.maxDate !== undefined && (self.currentYear === self.config.maxDate.getFullYear() ? self.currentMonth + 1 > self.config.maxDate.getMonth() : self.currentYear > self.config.maxDate.getFullYear());\n      }\n\n      function getDateStr(format) {\n        return self.selectedDates.map(function (dObj) {\n          return self.formatDate(dObj, format);\n        }).filter(function (d, i, arr) {\n          return self.config.mode !== \"range\" || self.config.enableTime || arr.indexOf(d) === i;\n        }).join(self.config.mode !== \"range\" ? self.config.conjunction : self.l10n.rangeSeparator);\n      }\n\n      function updateValue(triggerChange) {\n        if (triggerChange === void 0) {\n          triggerChange = true;\n        }\n\n        if (self.selectedDates.length === 0) return self.clear(triggerChange);\n\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n          self.mobileInput.value = self.latestSelectedDateObj !== undefined ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr) : \"\";\n        }\n\n        self.input.value = getDateStr(self.config.dateFormat);\n\n        if (self.altInput !== undefined) {\n          self.altInput.value = getDateStr(self.config.altFormat);\n        }\n\n        if (triggerChange !== false) triggerEvent(\"onValueUpdate\");\n      }\n\n      function onMonthNavClick(e) {\n        e.preventDefault();\n        var isPrevMonth = self.prevMonthNav.contains(e.target);\n        var isNextMonth = self.nextMonthNav.contains(e.target);\n\n        if (isPrevMonth || isNextMonth) {\n          changeMonth(isPrevMonth ? -1 : 1);\n        } else if (self.yearElements.indexOf(e.target) >= 0) {\n          e.target.select();\n        } else if (e.target.classList.contains(\"arrowUp\")) {\n          self.changeYear(self.currentYear + 1);\n        } else if (e.target.classList.contains(\"arrowDown\")) {\n          self.changeYear(self.currentYear - 1);\n        }\n      }\n\n      function timeWrapper(e) {\n        e.preventDefault();\n        var isKeyDown = e.type === \"keydown\",\n            input = e.target;\n\n        if (self.amPM !== undefined && e.target === self.amPM) {\n          self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n\n        var min = parseFloat(input.getAttribute(\"data-min\")),\n            max = parseFloat(input.getAttribute(\"data-max\")),\n            step = parseFloat(input.getAttribute(\"data-step\")),\n            curValue = parseInt(input.value, 10),\n            delta = e.delta || (isKeyDown ? e.which === 38 ? 1 : -1 : 0);\n        var newValue = curValue + step * delta;\n\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n          var isHourElem = input === self.hourElement,\n              isMinuteElem = input === self.minuteElement;\n\n          if (newValue < min) {\n            newValue = max + newValue + int(!isHourElem) + (int(isHourElem) && int(!self.amPM));\n            if (isMinuteElem) incrementNumInput(undefined, -1, self.hourElement);\n          } else if (newValue > max) {\n            newValue = input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n            if (isMinuteElem) incrementNumInput(undefined, 1, self.hourElement);\n          }\n\n          if (self.amPM && isHourElem && (step === 1 ? newValue + curValue === 23 : Math.abs(newValue - curValue) > step)) {\n            self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n          }\n\n          input.value = pad(newValue);\n        }\n      }\n\n      init();\n      return self;\n    }\n\n    function _flatpickr(nodeList, config) {\n      var nodes = Array.prototype.slice.call(nodeList);\n      var instances = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n\n        try {\n          if (node.getAttribute(\"data-fp-omit\") !== null) continue;\n\n          if (node._flatpickr !== undefined) {\n            node._flatpickr.destroy();\n\n            node._flatpickr = undefined;\n          }\n\n          node._flatpickr = FlatpickrInstance(node, config || {});\n          instances.push(node._flatpickr);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      return instances.length === 1 ? instances[0] : instances;\n    }\n\n    if (typeof HTMLElement !== \"undefined\") {\n      HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n      };\n\n      HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n      };\n    }\n\n    var flatpickr = function flatpickr(selector, config) {\n      if (selector instanceof NodeList) return _flatpickr(selector, config);else if (typeof selector === \"string\") return _flatpickr(window.document.querySelectorAll(selector), config);\n      return _flatpickr([selector], config);\n    };\n\n    flatpickr.defaultConfig = defaults;\n    flatpickr.l10ns = {\n      en: Object.assign({}, english),\n      default: Object.assign({}, english)\n    };\n\n    flatpickr.localize = function (l10n) {\n      flatpickr.l10ns.default = Object.assign({}, flatpickr.l10ns.default, l10n);\n    };\n\n    flatpickr.setDefaults = function (config) {\n      flatpickr.defaultConfig = Object.assign({}, flatpickr.defaultConfig, config);\n    };\n\n    flatpickr.parseDate = createDateParser({});\n    flatpickr.formatDate = createDateFormatter({});\n    flatpickr.compareDates = compareDates;\n\n    if (typeof jQuery !== \"undefined\") {\n      jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n      };\n    }\n\n    Date.prototype.fp_incr = function (days) {\n      return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n    };\n\n    if (typeof window !== \"undefined\") {\n      window.flatpickr = flatpickr;\n    }\n\n    return flatpickr;\n\n})));\n","let dialog = require('dcf-dialog');\nlet LazyLoad = require('dcf-lazyLoad');\nlet Notice = require('dcf-notice');\n\nlet flatpickr = require('flatpickr/flatpickr');\nrequire(\"flatpickr/flatpickr.css\");\n\n\nconst noticeOptions = {\n\twidget: 'notice',\n\t'notice-type': 'alert',\n\tanimation: 'true',\n\tlocation: 'fixedBottom',\n\tcollapsible: 'true',\n\tid: 'dynamicNotice1'\n};\n\nNotice.create('Spaghetti Monster Lives', 'You know no spaghetti', noticeOptions);\n\n\nlet datepicker = document.querySelector('[data-widget*=\"flatpickr\"]');\nflatpickr(datepicker, {\n\tenableTime: true,\n\tdateFormat: \"Y-m-d h:iK\",\n});\n\nconst images = document.querySelectorAll('.dcf-lazy-img');\nconst observerConfig = {\n\t// extend intersection root margin by 50px to start intersection earlier by 50px\n\trootMargin: '0px 0px 50px 0px',\n\tthreshold: [0, 0.40]\n};\nconst enterClassNames = ['dcf-fade-in'];\nconst exampleLazyLoad = new LazyLoad(images, observerConfig, enterClassNames);\nexampleLazyLoad.initialize();\n","'use strict';\n// For more information about browser field, check out the browser field at https://github.com/substack/browserify-handbook#browser-field.\n\nvar styleElementsInsertedAtTop = [];\n\nvar insertStyleElement = function(styleElement, options) {\n    var head = document.head || document.getElementsByTagName('head')[0];\n    var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\n    options = options || {};\n    options.insertAt = options.insertAt || 'bottom';\n\n    if (options.insertAt === 'top') {\n        if (!lastStyleElementInsertedAtTop) {\n            head.insertBefore(styleElement, head.firstChild);\n        } else if (lastStyleElementInsertedAtTop.nextSibling) {\n            head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n        } else {\n            head.appendChild(styleElement);\n        }\n        styleElementsInsertedAtTop.push(styleElement);\n    } else if (options.insertAt === 'bottom') {\n        head.appendChild(styleElement);\n    } else {\n        throw new Error('Invalid value for parameter \\'insertAt\\'. Must be \\'top\\' or \\'bottom\\'.');\n    }\n};\n\nmodule.exports = {\n    // Create a <link> tag with optional data attributes\n    createLink: function(href, attributes) {\n        var head = document.head || document.getElementsByTagName('head')[0];\n        var link = document.createElement('link');\n\n        link.href = href;\n        link.rel = 'stylesheet';\n\n        for (var key in attributes) {\n            if ( ! attributes.hasOwnProperty(key)) {\n                continue;\n            }\n            var value = attributes[key];\n            link.setAttribute('data-' + key, value);\n        }\n\n        head.appendChild(link);\n    },\n    // Create a <style> tag with optional data attributes\n    createStyle: function(cssText, attributes, extraOptions) {\n        extraOptions = extraOptions || {};\n\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        for (var key in attributes) {\n            if ( ! attributes.hasOwnProperty(key)) {\n                continue;\n            }\n            var value = attributes[key];\n            style.setAttribute('data-' + key, value);\n        }\n\n        if (style.sheet) { // for jsdom and IE9+\n            style.innerHTML = cssText;\n            style.sheet.cssText = cssText;\n            insertStyleElement(style, { insertAt: extraOptions.insertAt });\n        } else if (style.styleSheet) { // for IE8 and below\n            insertStyleElement(style, { insertAt: extraOptions.insertAt });\n            style.styleSheet.cssText = cssText;\n        } else { // for Chrome, Firefox, and Safari\n            style.appendChild(document.createTextNode(cssText));\n            insertStyleElement(style, { insertAt: extraOptions.insertAt });\n        }\n    }\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}